Terminals unused in grammar

   AND
   OR
   NEQ
   LT
   LE
   GT
   GE
   TIMES
   DIVIDE
   UMINUS
   WHILE
   FOR
   TO
   DO
   BREAK
   NIL
   FUNCTION


状态 9conflicts: 1 shift/reduce
状态 79conflicts: 2 shift/reduce


语法

    0 $accept: program $end

    1 program: exp

    2 exp: lvalue
    3    | stmt
    4    | arraydefine
    5    | record
    6    | exp PLUS exp
    7    | exp MINUS exp
    8    | INT
    9    | STRING

   10 arraydefine: id LBRACK exp RBRACK OF exp

   11 id: ID

   12 lvalue: id
   13       | lvalue DOT id
   14       | lvalue LBRACK exp RBRACK

   15 stmt: funccall
   16     | assignstmt
   17     | ifstmt
   18     | letstmt

   19 letstmt: LET decs IN expseq END

   20 expseq: exp
   21       | exp SEMICOLON expseq
   22       | %empty

   23 decs: dec decs
   24     | %empty

   25 dec: tydec
   26    | vardec

   27 record: id LBRACE recordfields RBRACE

   28 recordfields: id EQ exp
   29             | id EQ exp COMMA recordfields

   30 vardec: VAR ID ASSIGN exp
   31       | VAR id COLON id ASSIGN exp

   32 tydec: TYPE id EQ ty

   33 ty: id
   34   | LBRACE tyfields RBRACE
   35   | ARRAY OF id

   36 tyfields: %empty
   37         | id COLON id
   38         | id COLON id COMMA tyfields

   39 ifstmt: IF exp THEN exp
   40       | IF exp THEN exp ELSE exp

   41 assignstmt: lvalue ASSIGN exp

   42 funccall: id LPAREN args RPAREN

   43 args: exp COMMA args
   44     | exp


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 11 30
STRING (259) 9
INT (260) 8
ASSIGN (261) 30 31 41
AND (262)
OR (263)
EQ (264) 28 29 32
NEQ (265)
LT (266)
LE (267)
GT (268)
GE (269)
PLUS (270) 6
MINUS (271) 7
TIMES (272)
DIVIDE (273)
UMINUS (274)
LOWER_THAN_ELSE (275)
ELSE (276) 40
COMMA (277) 29 38 43
COLON (278) 31 37 38
SEMICOLON (279) 21
LPAREN (280) 42
RPAREN (281) 42
LBRACK (282) 10 14
RBRACK (283) 10 14
LBRACE (284) 27 34
RBRACE (285) 27 34
DOT (286) 13
ARRAY (287) 35
IF (288) 39 40
THEN (289) 39 40
WHILE (290)
FOR (291)
TO (292)
DO (293)
LET (294) 19
IN (295) 19
END (296) 19
OF (297) 10 35
BREAK (298)
NIL (299)
FUNCTION (300)
VAR (301) 30 31
TYPE (302) 32


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
program (49)
    on left: 1, on right: 0
exp (50)
    on left: 2 3 4 5 6 7 8 9, on right: 1 6 7 10 14 20 21 28 29 30
    31 39 40 41 43 44
arraydefine (51)
    on left: 10, on right: 4
id (52)
    on left: 11, on right: 10 12 13 27 28 29 31 32 33 35 37 38 42
lvalue (53)
    on left: 12 13 14, on right: 2 13 14 41
stmt (54)
    on left: 15 16 17 18, on right: 3
letstmt (55)
    on left: 19, on right: 18
expseq (56)
    on left: 20 21 22, on right: 19 21
decs (57)
    on left: 23 24, on right: 19 23
dec (58)
    on left: 25 26, on right: 23
record (59)
    on left: 27, on right: 5
recordfields (60)
    on left: 28 29, on right: 27 29
vardec (61)
    on left: 30 31, on right: 26
tydec (62)
    on left: 32, on right: 25
ty (63)
    on left: 33 34 35, on right: 32
tyfields (64)
    on left: 36 37 38, on right: 34 38
ifstmt (65)
    on left: 39 40, on right: 17
assignstmt (66)
    on left: 41, on right: 16
funccall (67)
    on left: 42, on right: 15
args (68)
    on left: 43 44, on right: 42 43


State 0

    0 $accept: . program $end

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    IF      shift, and go to state 4
    LET     shift, and go to state 5

    program      转到状态 6
    exp          转到状态 7
    arraydefine  转到状态 8
    id           转到状态 9
    lvalue       转到状态 10
    stmt         转到状态 11
    letstmt      转到状态 12
    record       转到状态 13
    ifstmt       转到状态 14
    assignstmt   转到状态 15
    funccall     转到状态 16


State 1

   11 id: ID .

    $default  reduce using rule 11 (id)


State 2

    9 exp: STRING .

    $default  reduce using rule 9 (exp)


State 3

    8 exp: INT .

    $default  reduce using rule 8 (exp)


State 4

   39 ifstmt: IF . exp THEN exp
   40       | IF . exp THEN exp ELSE exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    IF      shift, and go to state 4
    LET     shift, and go to state 5

    exp          转到状态 17
    arraydefine  转到状态 8
    id           转到状态 9
    lvalue       转到状态 10
    stmt         转到状态 11
    letstmt      转到状态 12
    record       转到状态 13
    ifstmt       转到状态 14
    assignstmt   转到状态 15
    funccall     转到状态 16


State 5

   19 letstmt: LET . decs IN expseq END

    VAR   shift, and go to state 18
    TYPE  shift, and go to state 19

    $default  reduce using rule 24 (decs)

    decs    转到状态 20
    dec     转到状态 21
    vardec  转到状态 22
    tydec   转到状态 23


State 6

    0 $accept: program . $end

    $end  shift, and go to state 24


State 7

    1 program: exp .
    6 exp: exp . PLUS exp
    7    | exp . MINUS exp

    PLUS   shift, and go to state 25
    MINUS  shift, and go to state 26

    $default  reduce using rule 1 (program)


State 8

    4 exp: arraydefine .

    $default  reduce using rule 4 (exp)


State 9

   10 arraydefine: id . LBRACK exp RBRACK OF exp
   12 lvalue: id .
   27 record: id . LBRACE recordfields RBRACE
   42 funccall: id . LPAREN args RPAREN

    LPAREN  shift, and go to state 27
    LBRACK  shift, and go to state 28
    LBRACE  shift, and go to state 29

    LBRACK    [reduce using rule 12 (lvalue)]
    $default  reduce using rule 12 (lvalue)


State 10

    2 exp: lvalue .
   13 lvalue: lvalue . DOT id
   14       | lvalue . LBRACK exp RBRACK
   41 assignstmt: lvalue . ASSIGN exp

    ASSIGN  shift, and go to state 30
    LBRACK  shift, and go to state 31
    DOT     shift, and go to state 32

    $default  reduce using rule 2 (exp)


State 11

    3 exp: stmt .

    $default  reduce using rule 3 (exp)


State 12

   18 stmt: letstmt .

    $default  reduce using rule 18 (stmt)


State 13

    5 exp: record .

    $default  reduce using rule 5 (exp)


State 14

   17 stmt: ifstmt .

    $default  reduce using rule 17 (stmt)


State 15

   16 stmt: assignstmt .

    $default  reduce using rule 16 (stmt)


State 16

   15 stmt: funccall .

    $default  reduce using rule 15 (stmt)


State 17

    6 exp: exp . PLUS exp
    7    | exp . MINUS exp
   39 ifstmt: IF exp . THEN exp
   40       | IF exp . THEN exp ELSE exp

    PLUS   shift, and go to state 25
    MINUS  shift, and go to state 26
    THEN   shift, and go to state 33


State 18

   30 vardec: VAR . ID ASSIGN exp
   31       | VAR . id COLON id ASSIGN exp

    ID  shift, and go to state 34

    id  转到状态 35


State 19

   32 tydec: TYPE . id EQ ty

    ID  shift, and go to state 1

    id  转到状态 36


State 20

   19 letstmt: LET decs . IN expseq END

    IN  shift, and go to state 37


State 21

   23 decs: dec . decs

    VAR   shift, and go to state 18
    TYPE  shift, and go to state 19

    $default  reduce using rule 24 (decs)

    decs    转到状态 38
    dec     转到状态 21
    vardec  转到状态 22
    tydec   转到状态 23


State 22

   26 dec: vardec .

    $default  reduce using rule 26 (dec)


State 23

   25 dec: tydec .

    $default  reduce using rule 25 (dec)


State 24

    0 $accept: program $end .

    $default  接受


State 25

    6 exp: exp PLUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    IF      shift, and go to state 4
    LET     shift, and go to state 5

    exp          转到状态 39
    arraydefine  转到状态 8
    id           转到状态 9
    lvalue       转到状态 10
    stmt         转到状态 11
    letstmt      转到状态 12
    record       转到状态 13
    ifstmt       转到状态 14
    assignstmt   转到状态 15
    funccall     转到状态 16


State 26

    7 exp: exp MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    IF      shift, and go to state 4
    LET     shift, and go to state 5

    exp          转到状态 40
    arraydefine  转到状态 8
    id           转到状态 9
    lvalue       转到状态 10
    stmt         转到状态 11
    letstmt      转到状态 12
    record       转到状态 13
    ifstmt       转到状态 14
    assignstmt   转到状态 15
    funccall     转到状态 16


State 27

   42 funccall: id LPAREN . args RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    IF      shift, and go to state 4
    LET     shift, and go to state 5

    exp          转到状态 41
    arraydefine  转到状态 8
    id           转到状态 9
    lvalue       转到状态 10
    stmt         转到状态 11
    letstmt      转到状态 12
    record       转到状态 13
    ifstmt       转到状态 14
    assignstmt   转到状态 15
    funccall     转到状态 16
    args         转到状态 42


State 28

   10 arraydefine: id LBRACK . exp RBRACK OF exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    IF      shift, and go to state 4
    LET     shift, and go to state 5

    exp          转到状态 43
    arraydefine  转到状态 8
    id           转到状态 9
    lvalue       转到状态 10
    stmt         转到状态 11
    letstmt      转到状态 12
    record       转到状态 13
    ifstmt       转到状态 14
    assignstmt   转到状态 15
    funccall     转到状态 16


State 29

   27 record: id LBRACE . recordfields RBRACE

    ID  shift, and go to state 1

    id            转到状态 44
    recordfields  转到状态 45


State 30

   41 assignstmt: lvalue ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    IF      shift, and go to state 4
    LET     shift, and go to state 5

    exp          转到状态 46
    arraydefine  转到状态 8
    id           转到状态 9
    lvalue       转到状态 10
    stmt         转到状态 11
    letstmt      转到状态 12
    record       转到状态 13
    ifstmt       转到状态 14
    assignstmt   转到状态 15
    funccall     转到状态 16


State 31

   14 lvalue: lvalue LBRACK . exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    IF      shift, and go to state 4
    LET     shift, and go to state 5

    exp          转到状态 47
    arraydefine  转到状态 8
    id           转到状态 9
    lvalue       转到状态 10
    stmt         转到状态 11
    letstmt      转到状态 12
    record       转到状态 13
    ifstmt       转到状态 14
    assignstmt   转到状态 15
    funccall     转到状态 16


State 32

   13 lvalue: lvalue DOT . id

    ID  shift, and go to state 1

    id  转到状态 48


State 33

   39 ifstmt: IF exp THEN . exp
   40       | IF exp THEN . exp ELSE exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    IF      shift, and go to state 4
    LET     shift, and go to state 5

    exp          转到状态 49
    arraydefine  转到状态 8
    id           转到状态 9
    lvalue       转到状态 10
    stmt         转到状态 11
    letstmt      转到状态 12
    record       转到状态 13
    ifstmt       转到状态 14
    assignstmt   转到状态 15
    funccall     转到状态 16


State 34

   11 id: ID .
   30 vardec: VAR ID . ASSIGN exp

    ASSIGN  shift, and go to state 50

    $default  reduce using rule 11 (id)


State 35

   31 vardec: VAR id . COLON id ASSIGN exp

    COLON  shift, and go to state 51


State 36

   32 tydec: TYPE id . EQ ty

    EQ  shift, and go to state 52


State 37

   19 letstmt: LET decs IN . expseq END

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    IF      shift, and go to state 4
    LET     shift, and go to state 5

    $default  reduce using rule 22 (expseq)

    exp          转到状态 53
    arraydefine  转到状态 8
    id           转到状态 9
    lvalue       转到状态 10
    stmt         转到状态 11
    letstmt      转到状态 12
    expseq       转到状态 54
    record       转到状态 13
    ifstmt       转到状态 14
    assignstmt   转到状态 15
    funccall     转到状态 16


State 38

   23 decs: dec decs .

    $default  reduce using rule 23 (decs)


State 39

    6 exp: exp . PLUS exp
    6    | exp PLUS exp .
    7    | exp . MINUS exp

    $default  reduce using rule 6 (exp)


State 40

    6 exp: exp . PLUS exp
    7    | exp . MINUS exp
    7    | exp MINUS exp .

    $default  reduce using rule 7 (exp)


State 41

    6 exp: exp . PLUS exp
    7    | exp . MINUS exp
   43 args: exp . COMMA args
   44     | exp .

    PLUS   shift, and go to state 25
    MINUS  shift, and go to state 26
    COMMA  shift, and go to state 55

    $default  reduce using rule 44 (args)


State 42

   42 funccall: id LPAREN args . RPAREN

    RPAREN  shift, and go to state 56


State 43

    6 exp: exp . PLUS exp
    7    | exp . MINUS exp
   10 arraydefine: id LBRACK exp . RBRACK OF exp

    PLUS    shift, and go to state 25
    MINUS   shift, and go to state 26
    RBRACK  shift, and go to state 57


State 44

   28 recordfields: id . EQ exp
   29             | id . EQ exp COMMA recordfields

    EQ  shift, and go to state 58


State 45

   27 record: id LBRACE recordfields . RBRACE

    RBRACE  shift, and go to state 59


State 46

    6 exp: exp . PLUS exp
    7    | exp . MINUS exp
   41 assignstmt: lvalue ASSIGN exp .

    PLUS   shift, and go to state 25
    MINUS  shift, and go to state 26

    $default  reduce using rule 41 (assignstmt)


State 47

    6 exp: exp . PLUS exp
    7    | exp . MINUS exp
   14 lvalue: lvalue LBRACK exp . RBRACK

    PLUS    shift, and go to state 25
    MINUS   shift, and go to state 26
    RBRACK  shift, and go to state 60


State 48

   13 lvalue: lvalue DOT id .

    $default  reduce using rule 13 (lvalue)


State 49

    6 exp: exp . PLUS exp
    7    | exp . MINUS exp
   39 ifstmt: IF exp THEN exp .
   40       | IF exp THEN exp . ELSE exp

    ELSE  shift, and go to state 61

    $default  reduce using rule 39 (ifstmt)


State 50

   30 vardec: VAR ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    IF      shift, and go to state 4
    LET     shift, and go to state 5

    exp          转到状态 62
    arraydefine  转到状态 8
    id           转到状态 9
    lvalue       转到状态 10
    stmt         转到状态 11
    letstmt      转到状态 12
    record       转到状态 13
    ifstmt       转到状态 14
    assignstmt   转到状态 15
    funccall     转到状态 16


State 51

   31 vardec: VAR id COLON . id ASSIGN exp

    ID  shift, and go to state 1

    id  转到状态 63


State 52

   32 tydec: TYPE id EQ . ty

    ID      shift, and go to state 1
    LBRACE  shift, and go to state 64
    ARRAY   shift, and go to state 65

    id  转到状态 66
    ty  转到状态 67


State 53

    6 exp: exp . PLUS exp
    7    | exp . MINUS exp
   20 expseq: exp .
   21       | exp . SEMICOLON expseq

    PLUS       shift, and go to state 25
    MINUS      shift, and go to state 26
    SEMICOLON  shift, and go to state 68

    $default  reduce using rule 20 (expseq)


State 54

   19 letstmt: LET decs IN expseq . END

    END  shift, and go to state 69


State 55

   43 args: exp COMMA . args

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    IF      shift, and go to state 4
    LET     shift, and go to state 5

    exp          转到状态 41
    arraydefine  转到状态 8
    id           转到状态 9
    lvalue       转到状态 10
    stmt         转到状态 11
    letstmt      转到状态 12
    record       转到状态 13
    ifstmt       转到状态 14
    assignstmt   转到状态 15
    funccall     转到状态 16
    args         转到状态 70


State 56

   42 funccall: id LPAREN args RPAREN .

    $default  reduce using rule 42 (funccall)


State 57

   10 arraydefine: id LBRACK exp RBRACK . OF exp

    OF  shift, and go to state 71


State 58

   28 recordfields: id EQ . exp
   29             | id EQ . exp COMMA recordfields

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    IF      shift, and go to state 4
    LET     shift, and go to state 5

    exp          转到状态 72
    arraydefine  转到状态 8
    id           转到状态 9
    lvalue       转到状态 10
    stmt         转到状态 11
    letstmt      转到状态 12
    record       转到状态 13
    ifstmt       转到状态 14
    assignstmt   转到状态 15
    funccall     转到状态 16


State 59

   27 record: id LBRACE recordfields RBRACE .

    $default  reduce using rule 27 (record)


State 60

   14 lvalue: lvalue LBRACK exp RBRACK .

    $default  reduce using rule 14 (lvalue)


State 61

   40 ifstmt: IF exp THEN exp ELSE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    IF      shift, and go to state 4
    LET     shift, and go to state 5

    exp          转到状态 73
    arraydefine  转到状态 8
    id           转到状态 9
    lvalue       转到状态 10
    stmt         转到状态 11
    letstmt      转到状态 12
    record       转到状态 13
    ifstmt       转到状态 14
    assignstmt   转到状态 15
    funccall     转到状态 16


State 62

    6 exp: exp . PLUS exp
    7    | exp . MINUS exp
   30 vardec: VAR ID ASSIGN exp .

    PLUS   shift, and go to state 25
    MINUS  shift, and go to state 26

    $default  reduce using rule 30 (vardec)


State 63

   31 vardec: VAR id COLON id . ASSIGN exp

    ASSIGN  shift, and go to state 74


State 64

   34 ty: LBRACE . tyfields RBRACE

    ID  shift, and go to state 1

    $default  reduce using rule 36 (tyfields)

    id        转到状态 75
    tyfields  转到状态 76


State 65

   35 ty: ARRAY . OF id

    OF  shift, and go to state 77


State 66

   33 ty: id .

    $default  reduce using rule 33 (ty)


State 67

   32 tydec: TYPE id EQ ty .

    $default  reduce using rule 32 (tydec)


State 68

   21 expseq: exp SEMICOLON . expseq

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    IF      shift, and go to state 4
    LET     shift, and go to state 5

    $default  reduce using rule 22 (expseq)

    exp          转到状态 53
    arraydefine  转到状态 8
    id           转到状态 9
    lvalue       转到状态 10
    stmt         转到状态 11
    letstmt      转到状态 12
    expseq       转到状态 78
    record       转到状态 13
    ifstmt       转到状态 14
    assignstmt   转到状态 15
    funccall     转到状态 16


State 69

   19 letstmt: LET decs IN expseq END .

    $default  reduce using rule 19 (letstmt)


State 70

   43 args: exp COMMA args .

    $default  reduce using rule 43 (args)


State 71

   10 arraydefine: id LBRACK exp RBRACK OF . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    IF      shift, and go to state 4
    LET     shift, and go to state 5

    exp          转到状态 79
    arraydefine  转到状态 8
    id           转到状态 9
    lvalue       转到状态 10
    stmt         转到状态 11
    letstmt      转到状态 12
    record       转到状态 13
    ifstmt       转到状态 14
    assignstmt   转到状态 15
    funccall     转到状态 16


State 72

    6 exp: exp . PLUS exp
    7    | exp . MINUS exp
   28 recordfields: id EQ exp .
   29             | id EQ exp . COMMA recordfields

    PLUS   shift, and go to state 25
    MINUS  shift, and go to state 26
    COMMA  shift, and go to state 80

    $default  reduce using rule 28 (recordfields)


State 73

    6 exp: exp . PLUS exp
    7    | exp . MINUS exp
   40 ifstmt: IF exp THEN exp ELSE exp .

    $default  reduce using rule 40 (ifstmt)


State 74

   31 vardec: VAR id COLON id ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    IF      shift, and go to state 4
    LET     shift, and go to state 5

    exp          转到状态 81
    arraydefine  转到状态 8
    id           转到状态 9
    lvalue       转到状态 10
    stmt         转到状态 11
    letstmt      转到状态 12
    record       转到状态 13
    ifstmt       转到状态 14
    assignstmt   转到状态 15
    funccall     转到状态 16


State 75

   37 tyfields: id . COLON id
   38         | id . COLON id COMMA tyfields

    COLON  shift, and go to state 82


State 76

   34 ty: LBRACE tyfields . RBRACE

    RBRACE  shift, and go to state 83


State 77

   35 ty: ARRAY OF . id

    ID  shift, and go to state 1

    id  转到状态 84


State 78

   21 expseq: exp SEMICOLON expseq .

    $default  reduce using rule 21 (expseq)


State 79

    6 exp: exp . PLUS exp
    7    | exp . MINUS exp
   10 arraydefine: id LBRACK exp RBRACK OF exp .

    PLUS   shift, and go to state 25
    MINUS  shift, and go to state 26

    PLUS      [reduce using rule 10 (arraydefine)]
    MINUS     [reduce using rule 10 (arraydefine)]
    $default  reduce using rule 10 (arraydefine)


State 80

   29 recordfields: id EQ exp COMMA . recordfields

    ID  shift, and go to state 1

    id            转到状态 44
    recordfields  转到状态 85


State 81

    6 exp: exp . PLUS exp
    7    | exp . MINUS exp
   31 vardec: VAR id COLON id ASSIGN exp .

    PLUS   shift, and go to state 25
    MINUS  shift, and go to state 26

    $default  reduce using rule 31 (vardec)


State 82

   37 tyfields: id COLON . id
   38         | id COLON . id COMMA tyfields

    ID  shift, and go to state 1

    id  转到状态 86


State 83

   34 ty: LBRACE tyfields RBRACE .

    $default  reduce using rule 34 (ty)


State 84

   35 ty: ARRAY OF id .

    $default  reduce using rule 35 (ty)


State 85

   29 recordfields: id EQ exp COMMA recordfields .

    $default  reduce using rule 29 (recordfields)


State 86

   37 tyfields: id COLON id .
   38         | id COLON id . COMMA tyfields

    COMMA  shift, and go to state 87

    $default  reduce using rule 37 (tyfields)


State 87

   38 tyfields: id COLON id COMMA . tyfields

    ID  shift, and go to state 1

    $default  reduce using rule 36 (tyfields)

    id        转到状态 75
    tyfields  转到状态 88


State 88

   38 tyfields: id COLON id COMMA tyfields .

    $default  reduce using rule 38 (tyfields)
