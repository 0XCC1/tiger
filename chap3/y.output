Terminals unused in grammar

   DO
   UMINUS
   WHILE
   FOR
   TO
   BREAK


状态 11conflicts: 1 shift/reduce


语法

    0 $accept: program $end

    1 program: exp

    2 exp: lvalue
    3    | stmt
    4    | arraydefine
    5    | record
    6    | comparestmt
    7    | exp PLUS exp
    8    | exp MINUS exp
    9    | exp TIMES exp
   10    | exp DIVIDE exp
   11    | INT
   12    | STRING
   13    | NIL

   14 comparestmt: exp EQ exp
   15            | exp NEQ exp
   16            | exp GT exp
   17            | exp LT exp
   18            | exp GE exp
   19            | exp LE exp
   20            | exp AND exp
   21            | exp OR exp

   22 arraydefine: id LBRACK exp RBRACK OF exp

   23 id: ID

   24 lvalue: id
   25       | lvalue DOT id
   26       | lvalue LBRACK exp RBRACK

   27 stmt: funccall
   28     | assignstmt
   29     | ifstmt
   30     | letstmt

   31 letstmt: LET decs IN expseq END

   32 expseq: exp
   33       | exp SEMICOLON expseq
   34       | %empty

   35 decs: dec decs
   36     | %empty

   37 dec: tydec
   38    | vardec
   39    | fundec

   40 fundec: FUNCTION id LPAREN tyfields RPAREN EQ exp
   41       | FUNCTION id LPAREN tyfields RPAREN COLON id EQ exp

   42 record: id LBRACE recordfields RBRACE

   43 recordfields: id EQ exp
   44             | id EQ exp COMMA recordfields

   45 vardec: VAR ID ASSIGN exp
   46       | VAR id COLON id ASSIGN exp

   47 tydec: TYPE id EQ ty

   48 ty: id
   49   | LBRACE tyfields RBRACE
   50   | ARRAY OF id

   51 tyfields: %empty
   52         | id COLON id
   53         | id COLON id COMMA tyfields

   54 ifstmt: IF exp THEN exp
   55       | IF exp THEN exp ELSE exp

   56 assignstmt: lvalue ASSIGN exp

   57 funccall: id LPAREN args RPAREN

   58 args: exp COMMA args
   59     | exp


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 23 45
STRING (259) 12
INT (260) 11
ASSIGN (261) 45 46 56
AND (262) 20
OR (263) 21
EQ (264) 14 40 41 43 44 47
NEQ (265) 15
LT (266) 17
LE (267) 19
GT (268) 16
GE (269) 18
PLUS (270) 7
MINUS (271) 8
TIMES (272) 9
DIVIDE (273) 10
DO (274)
OF (275) 22 50
UMINUS (276)
LOWER_THAN_ELSE (277)
ELSE (278) 55
COMMA (279) 44 53 58
COLON (280) 41 46 52 53
SEMICOLON (281) 33
LPAREN (282) 40 41 57
RPAREN (283) 40 41 57
LBRACK (284) 22 26
RBRACK (285) 22 26
LBRACE (286) 42 49
RBRACE (287) 42 49
DOT (288) 25
ARRAY (289) 50
IF (290) 54 55
THEN (291) 54 55
WHILE (292)
FOR (293)
TO (294)
LET (295) 31
IN (296) 31
END (297) 31
BREAK (298)
NIL (299) 13
FUNCTION (300) 40 41
VAR (301) 45 46
TYPE (302) 47


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
program (49)
    on left: 1, on right: 0
exp (50)
    on left: 2 3 4 5 6 7 8 9 10 11 12 13, on right: 1 7 8 9 10 14 15
    16 17 18 19 20 21 22 26 32 33 40 41 43 44 45 46 54 55 56 58 59
comparestmt (51)
    on left: 14 15 16 17 18 19 20 21, on right: 6
arraydefine (52)
    on left: 22, on right: 4
id (53)
    on left: 23, on right: 22 24 25 40 41 42 43 44 46 47 48 50 52 53
    57
lvalue (54)
    on left: 24 25 26, on right: 2 25 26 56
stmt (55)
    on left: 27 28 29 30, on right: 3
letstmt (56)
    on left: 31, on right: 30
expseq (57)
    on left: 32 33 34, on right: 31 33
decs (58)
    on left: 35 36, on right: 31 35
dec (59)
    on left: 37 38 39, on right: 35
fundec (60)
    on left: 40 41, on right: 39
record (61)
    on left: 42, on right: 5
recordfields (62)
    on left: 43 44, on right: 42 44
vardec (63)
    on left: 45 46, on right: 38
tydec (64)
    on left: 47, on right: 37
ty (65)
    on left: 48 49 50, on right: 47
tyfields (66)
    on left: 51 52 53, on right: 40 41 49 53
ifstmt (67)
    on left: 54 55, on right: 29
assignstmt (68)
    on left: 56, on right: 28
funccall (69)
    on left: 57, on right: 27
args (70)
    on left: 58 59, on right: 57 58


State 0

    0 $accept: . program $end

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    IF      shift, and go to state 4
    LET     shift, and go to state 5
    NIL     shift, and go to state 6

    program      转到状态 7
    exp          转到状态 8
    comparestmt  转到状态 9
    arraydefine  转到状态 10
    id           转到状态 11
    lvalue       转到状态 12
    stmt         转到状态 13
    letstmt      转到状态 14
    record       转到状态 15
    ifstmt       转到状态 16
    assignstmt   转到状态 17
    funccall     转到状态 18


State 1

   23 id: ID .

    $default  reduce using rule 23 (id)


State 2

   12 exp: STRING .

    $default  reduce using rule 12 (exp)


State 3

   11 exp: INT .

    $default  reduce using rule 11 (exp)


State 4

   54 ifstmt: IF . exp THEN exp
   55       | IF . exp THEN exp ELSE exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    IF      shift, and go to state 4
    LET     shift, and go to state 5
    NIL     shift, and go to state 6

    exp          转到状态 19
    comparestmt  转到状态 9
    arraydefine  转到状态 10
    id           转到状态 11
    lvalue       转到状态 12
    stmt         转到状态 13
    letstmt      转到状态 14
    record       转到状态 15
    ifstmt       转到状态 16
    assignstmt   转到状态 17
    funccall     转到状态 18


State 5

   31 letstmt: LET . decs IN expseq END

    FUNCTION  shift, and go to state 20
    VAR       shift, and go to state 21
    TYPE      shift, and go to state 22

    $default  reduce using rule 36 (decs)

    decs    转到状态 23
    dec     转到状态 24
    fundec  转到状态 25
    vardec  转到状态 26
    tydec   转到状态 27


State 6

   13 exp: NIL .

    $default  reduce using rule 13 (exp)


State 7

    0 $accept: program . $end

    $end  shift, and go to state 28


State 8

    1 program: exp .
    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   14 comparestmt: exp . EQ exp
   15            | exp . NEQ exp
   16            | exp . GT exp
   17            | exp . LT exp
   18            | exp . GE exp
   19            | exp . LE exp
   20            | exp . AND exp
   21            | exp . OR exp

    AND     shift, and go to state 29
    OR      shift, and go to state 30
    EQ      shift, and go to state 31
    NEQ     shift, and go to state 32
    LT      shift, and go to state 33
    LE      shift, and go to state 34
    GT      shift, and go to state 35
    GE      shift, and go to state 36
    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40

    $default  reduce using rule 1 (program)


State 9

    6 exp: comparestmt .

    $default  reduce using rule 6 (exp)


State 10

    4 exp: arraydefine .

    $default  reduce using rule 4 (exp)


State 11

   22 arraydefine: id . LBRACK exp RBRACK OF exp
   24 lvalue: id .
   42 record: id . LBRACE recordfields RBRACE
   57 funccall: id . LPAREN args RPAREN

    LPAREN  shift, and go to state 41
    LBRACK  shift, and go to state 42
    LBRACE  shift, and go to state 43

    LBRACK    [reduce using rule 24 (lvalue)]
    $default  reduce using rule 24 (lvalue)


State 12

    2 exp: lvalue .
   25 lvalue: lvalue . DOT id
   26       | lvalue . LBRACK exp RBRACK
   56 assignstmt: lvalue . ASSIGN exp

    ASSIGN  shift, and go to state 44
    LBRACK  shift, and go to state 45
    DOT     shift, and go to state 46

    $default  reduce using rule 2 (exp)


State 13

    3 exp: stmt .

    $default  reduce using rule 3 (exp)


State 14

   30 stmt: letstmt .

    $default  reduce using rule 30 (stmt)


State 15

    5 exp: record .

    $default  reduce using rule 5 (exp)


State 16

   29 stmt: ifstmt .

    $default  reduce using rule 29 (stmt)


State 17

   28 stmt: assignstmt .

    $default  reduce using rule 28 (stmt)


State 18

   27 stmt: funccall .

    $default  reduce using rule 27 (stmt)


State 19

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   14 comparestmt: exp . EQ exp
   15            | exp . NEQ exp
   16            | exp . GT exp
   17            | exp . LT exp
   18            | exp . GE exp
   19            | exp . LE exp
   20            | exp . AND exp
   21            | exp . OR exp
   54 ifstmt: IF exp . THEN exp
   55       | IF exp . THEN exp ELSE exp

    AND     shift, and go to state 29
    OR      shift, and go to state 30
    EQ      shift, and go to state 31
    NEQ     shift, and go to state 32
    LT      shift, and go to state 33
    LE      shift, and go to state 34
    GT      shift, and go to state 35
    GE      shift, and go to state 36
    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    THEN    shift, and go to state 47


State 20

   40 fundec: FUNCTION . id LPAREN tyfields RPAREN EQ exp
   41       | FUNCTION . id LPAREN tyfields RPAREN COLON id EQ exp

    ID  shift, and go to state 1

    id  转到状态 48


State 21

   45 vardec: VAR . ID ASSIGN exp
   46       | VAR . id COLON id ASSIGN exp

    ID  shift, and go to state 49

    id  转到状态 50


State 22

   47 tydec: TYPE . id EQ ty

    ID  shift, and go to state 1

    id  转到状态 51


State 23

   31 letstmt: LET decs . IN expseq END

    IN  shift, and go to state 52


State 24

   35 decs: dec . decs

    FUNCTION  shift, and go to state 20
    VAR       shift, and go to state 21
    TYPE      shift, and go to state 22

    $default  reduce using rule 36 (decs)

    decs    转到状态 53
    dec     转到状态 24
    fundec  转到状态 25
    vardec  转到状态 26
    tydec   转到状态 27


State 25

   39 dec: fundec .

    $default  reduce using rule 39 (dec)


State 26

   38 dec: vardec .

    $default  reduce using rule 38 (dec)


State 27

   37 dec: tydec .

    $default  reduce using rule 37 (dec)


State 28

    0 $accept: program $end .

    $default  接受


State 29

   20 comparestmt: exp AND . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    IF      shift, and go to state 4
    LET     shift, and go to state 5
    NIL     shift, and go to state 6

    exp          转到状态 54
    comparestmt  转到状态 9
    arraydefine  转到状态 10
    id           转到状态 11
    lvalue       转到状态 12
    stmt         转到状态 13
    letstmt      转到状态 14
    record       转到状态 15
    ifstmt       转到状态 16
    assignstmt   转到状态 17
    funccall     转到状态 18


State 30

   21 comparestmt: exp OR . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    IF      shift, and go to state 4
    LET     shift, and go to state 5
    NIL     shift, and go to state 6

    exp          转到状态 55
    comparestmt  转到状态 9
    arraydefine  转到状态 10
    id           转到状态 11
    lvalue       转到状态 12
    stmt         转到状态 13
    letstmt      转到状态 14
    record       转到状态 15
    ifstmt       转到状态 16
    assignstmt   转到状态 17
    funccall     转到状态 18


State 31

   14 comparestmt: exp EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    IF      shift, and go to state 4
    LET     shift, and go to state 5
    NIL     shift, and go to state 6

    exp          转到状态 56
    comparestmt  转到状态 9
    arraydefine  转到状态 10
    id           转到状态 11
    lvalue       转到状态 12
    stmt         转到状态 13
    letstmt      转到状态 14
    record       转到状态 15
    ifstmt       转到状态 16
    assignstmt   转到状态 17
    funccall     转到状态 18


State 32

   15 comparestmt: exp NEQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    IF      shift, and go to state 4
    LET     shift, and go to state 5
    NIL     shift, and go to state 6

    exp          转到状态 57
    comparestmt  转到状态 9
    arraydefine  转到状态 10
    id           转到状态 11
    lvalue       转到状态 12
    stmt         转到状态 13
    letstmt      转到状态 14
    record       转到状态 15
    ifstmt       转到状态 16
    assignstmt   转到状态 17
    funccall     转到状态 18


State 33

   17 comparestmt: exp LT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    IF      shift, and go to state 4
    LET     shift, and go to state 5
    NIL     shift, and go to state 6

    exp          转到状态 58
    comparestmt  转到状态 9
    arraydefine  转到状态 10
    id           转到状态 11
    lvalue       转到状态 12
    stmt         转到状态 13
    letstmt      转到状态 14
    record       转到状态 15
    ifstmt       转到状态 16
    assignstmt   转到状态 17
    funccall     转到状态 18


State 34

   19 comparestmt: exp LE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    IF      shift, and go to state 4
    LET     shift, and go to state 5
    NIL     shift, and go to state 6

    exp          转到状态 59
    comparestmt  转到状态 9
    arraydefine  转到状态 10
    id           转到状态 11
    lvalue       转到状态 12
    stmt         转到状态 13
    letstmt      转到状态 14
    record       转到状态 15
    ifstmt       转到状态 16
    assignstmt   转到状态 17
    funccall     转到状态 18


State 35

   16 comparestmt: exp GT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    IF      shift, and go to state 4
    LET     shift, and go to state 5
    NIL     shift, and go to state 6

    exp          转到状态 60
    comparestmt  转到状态 9
    arraydefine  转到状态 10
    id           转到状态 11
    lvalue       转到状态 12
    stmt         转到状态 13
    letstmt      转到状态 14
    record       转到状态 15
    ifstmt       转到状态 16
    assignstmt   转到状态 17
    funccall     转到状态 18


State 36

   18 comparestmt: exp GE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    IF      shift, and go to state 4
    LET     shift, and go to state 5
    NIL     shift, and go to state 6

    exp          转到状态 61
    comparestmt  转到状态 9
    arraydefine  转到状态 10
    id           转到状态 11
    lvalue       转到状态 12
    stmt         转到状态 13
    letstmt      转到状态 14
    record       转到状态 15
    ifstmt       转到状态 16
    assignstmt   转到状态 17
    funccall     转到状态 18


State 37

    7 exp: exp PLUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    IF      shift, and go to state 4
    LET     shift, and go to state 5
    NIL     shift, and go to state 6

    exp          转到状态 62
    comparestmt  转到状态 9
    arraydefine  转到状态 10
    id           转到状态 11
    lvalue       转到状态 12
    stmt         转到状态 13
    letstmt      转到状态 14
    record       转到状态 15
    ifstmt       转到状态 16
    assignstmt   转到状态 17
    funccall     转到状态 18


State 38

    8 exp: exp MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    IF      shift, and go to state 4
    LET     shift, and go to state 5
    NIL     shift, and go to state 6

    exp          转到状态 63
    comparestmt  转到状态 9
    arraydefine  转到状态 10
    id           转到状态 11
    lvalue       转到状态 12
    stmt         转到状态 13
    letstmt      转到状态 14
    record       转到状态 15
    ifstmt       转到状态 16
    assignstmt   转到状态 17
    funccall     转到状态 18


State 39

    9 exp: exp TIMES . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    IF      shift, and go to state 4
    LET     shift, and go to state 5
    NIL     shift, and go to state 6

    exp          转到状态 64
    comparestmt  转到状态 9
    arraydefine  转到状态 10
    id           转到状态 11
    lvalue       转到状态 12
    stmt         转到状态 13
    letstmt      转到状态 14
    record       转到状态 15
    ifstmt       转到状态 16
    assignstmt   转到状态 17
    funccall     转到状态 18


State 40

   10 exp: exp DIVIDE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    IF      shift, and go to state 4
    LET     shift, and go to state 5
    NIL     shift, and go to state 6

    exp          转到状态 65
    comparestmt  转到状态 9
    arraydefine  转到状态 10
    id           转到状态 11
    lvalue       转到状态 12
    stmt         转到状态 13
    letstmt      转到状态 14
    record       转到状态 15
    ifstmt       转到状态 16
    assignstmt   转到状态 17
    funccall     转到状态 18


State 41

   57 funccall: id LPAREN . args RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    IF      shift, and go to state 4
    LET     shift, and go to state 5
    NIL     shift, and go to state 6

    exp          转到状态 66
    comparestmt  转到状态 9
    arraydefine  转到状态 10
    id           转到状态 11
    lvalue       转到状态 12
    stmt         转到状态 13
    letstmt      转到状态 14
    record       转到状态 15
    ifstmt       转到状态 16
    assignstmt   转到状态 17
    funccall     转到状态 18
    args         转到状态 67


State 42

   22 arraydefine: id LBRACK . exp RBRACK OF exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    IF      shift, and go to state 4
    LET     shift, and go to state 5
    NIL     shift, and go to state 6

    exp          转到状态 68
    comparestmt  转到状态 9
    arraydefine  转到状态 10
    id           转到状态 11
    lvalue       转到状态 12
    stmt         转到状态 13
    letstmt      转到状态 14
    record       转到状态 15
    ifstmt       转到状态 16
    assignstmt   转到状态 17
    funccall     转到状态 18


State 43

   42 record: id LBRACE . recordfields RBRACE

    ID  shift, and go to state 1

    id            转到状态 69
    recordfields  转到状态 70


State 44

   56 assignstmt: lvalue ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    IF      shift, and go to state 4
    LET     shift, and go to state 5
    NIL     shift, and go to state 6

    exp          转到状态 71
    comparestmt  转到状态 9
    arraydefine  转到状态 10
    id           转到状态 11
    lvalue       转到状态 12
    stmt         转到状态 13
    letstmt      转到状态 14
    record       转到状态 15
    ifstmt       转到状态 16
    assignstmt   转到状态 17
    funccall     转到状态 18


State 45

   26 lvalue: lvalue LBRACK . exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    IF      shift, and go to state 4
    LET     shift, and go to state 5
    NIL     shift, and go to state 6

    exp          转到状态 72
    comparestmt  转到状态 9
    arraydefine  转到状态 10
    id           转到状态 11
    lvalue       转到状态 12
    stmt         转到状态 13
    letstmt      转到状态 14
    record       转到状态 15
    ifstmt       转到状态 16
    assignstmt   转到状态 17
    funccall     转到状态 18


State 46

   25 lvalue: lvalue DOT . id

    ID  shift, and go to state 1

    id  转到状态 73


State 47

   54 ifstmt: IF exp THEN . exp
   55       | IF exp THEN . exp ELSE exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    IF      shift, and go to state 4
    LET     shift, and go to state 5
    NIL     shift, and go to state 6

    exp          转到状态 74
    comparestmt  转到状态 9
    arraydefine  转到状态 10
    id           转到状态 11
    lvalue       转到状态 12
    stmt         转到状态 13
    letstmt      转到状态 14
    record       转到状态 15
    ifstmt       转到状态 16
    assignstmt   转到状态 17
    funccall     转到状态 18


State 48

   40 fundec: FUNCTION id . LPAREN tyfields RPAREN EQ exp
   41       | FUNCTION id . LPAREN tyfields RPAREN COLON id EQ exp

    LPAREN  shift, and go to state 75


State 49

   23 id: ID .
   45 vardec: VAR ID . ASSIGN exp

    ASSIGN  shift, and go to state 76

    $default  reduce using rule 23 (id)


State 50

   46 vardec: VAR id . COLON id ASSIGN exp

    COLON  shift, and go to state 77


State 51

   47 tydec: TYPE id . EQ ty

    EQ  shift, and go to state 78


State 52

   31 letstmt: LET decs IN . expseq END

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    IF      shift, and go to state 4
    LET     shift, and go to state 5
    NIL     shift, and go to state 6

    $default  reduce using rule 34 (expseq)

    exp          转到状态 79
    comparestmt  转到状态 9
    arraydefine  转到状态 10
    id           转到状态 11
    lvalue       转到状态 12
    stmt         转到状态 13
    letstmt      转到状态 14
    expseq       转到状态 80
    record       转到状态 15
    ifstmt       转到状态 16
    assignstmt   转到状态 17
    funccall     转到状态 18


State 53

   35 decs: dec decs .

    $default  reduce using rule 35 (decs)


State 54

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   14 comparestmt: exp . EQ exp
   15            | exp . NEQ exp
   16            | exp . GT exp
   17            | exp . LT exp
   18            | exp . GE exp
   19            | exp . LE exp
   20            | exp . AND exp
   20            | exp AND exp .
   21            | exp . OR exp

    EQ      shift, and go to state 31
    NEQ     shift, and go to state 32
    LT      shift, and go to state 33
    LE      shift, and go to state 34
    GT      shift, and go to state 35
    GE      shift, and go to state 36
    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40

    $default  reduce using rule 20 (comparestmt)


State 55

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   14 comparestmt: exp . EQ exp
   15            | exp . NEQ exp
   16            | exp . GT exp
   17            | exp . LT exp
   18            | exp . GE exp
   19            | exp . LE exp
   20            | exp . AND exp
   21            | exp . OR exp
   21            | exp OR exp .

    EQ      shift, and go to state 31
    NEQ     shift, and go to state 32
    LT      shift, and go to state 33
    LE      shift, and go to state 34
    GT      shift, and go to state 35
    GE      shift, and go to state 36
    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40

    $default  reduce using rule 21 (comparestmt)


State 56

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   14 comparestmt: exp . EQ exp
   14            | exp EQ exp .
   15            | exp . NEQ exp
   16            | exp . GT exp
   17            | exp . LT exp
   18            | exp . GE exp
   19            | exp . LE exp
   20            | exp . AND exp
   21            | exp . OR exp

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 14 (comparestmt)


State 57

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   14 comparestmt: exp . EQ exp
   15            | exp . NEQ exp
   15            | exp NEQ exp .
   16            | exp . GT exp
   17            | exp . LT exp
   18            | exp . GE exp
   19            | exp . LE exp
   20            | exp . AND exp
   21            | exp . OR exp

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 15 (comparestmt)


State 58

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   14 comparestmt: exp . EQ exp
   15            | exp . NEQ exp
   16            | exp . GT exp
   17            | exp . LT exp
   17            | exp LT exp .
   18            | exp . GE exp
   19            | exp . LE exp
   20            | exp . AND exp
   21            | exp . OR exp

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 17 (comparestmt)


State 59

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   14 comparestmt: exp . EQ exp
   15            | exp . NEQ exp
   16            | exp . GT exp
   17            | exp . LT exp
   18            | exp . GE exp
   19            | exp . LE exp
   19            | exp LE exp .
   20            | exp . AND exp
   21            | exp . OR exp

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 19 (comparestmt)


State 60

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   14 comparestmt: exp . EQ exp
   15            | exp . NEQ exp
   16            | exp . GT exp
   16            | exp GT exp .
   17            | exp . LT exp
   18            | exp . GE exp
   19            | exp . LE exp
   20            | exp . AND exp
   21            | exp . OR exp

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 16 (comparestmt)


State 61

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   14 comparestmt: exp . EQ exp
   15            | exp . NEQ exp
   16            | exp . GT exp
   17            | exp . LT exp
   18            | exp . GE exp
   18            | exp GE exp .
   19            | exp . LE exp
   20            | exp . AND exp
   21            | exp . OR exp

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 18 (comparestmt)


State 62

    7 exp: exp . PLUS exp
    7    | exp PLUS exp .
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   14 comparestmt: exp . EQ exp
   15            | exp . NEQ exp
   16            | exp . GT exp
   17            | exp . LT exp
   18            | exp . GE exp
   19            | exp . LE exp
   20            | exp . AND exp
   21            | exp . OR exp

    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40

    $default  reduce using rule 7 (exp)


State 63

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    8    | exp MINUS exp .
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   14 comparestmt: exp . EQ exp
   15            | exp . NEQ exp
   16            | exp . GT exp
   17            | exp . LT exp
   18            | exp . GE exp
   19            | exp . LE exp
   20            | exp . AND exp
   21            | exp . OR exp

    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40

    $default  reduce using rule 8 (exp)


State 64

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
    9    | exp TIMES exp .
   10    | exp . DIVIDE exp
   14 comparestmt: exp . EQ exp
   15            | exp . NEQ exp
   16            | exp . GT exp
   17            | exp . LT exp
   18            | exp . GE exp
   19            | exp . LE exp
   20            | exp . AND exp
   21            | exp . OR exp

    $default  reduce using rule 9 (exp)


State 65

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   10    | exp DIVIDE exp .
   14 comparestmt: exp . EQ exp
   15            | exp . NEQ exp
   16            | exp . GT exp
   17            | exp . LT exp
   18            | exp . GE exp
   19            | exp . LE exp
   20            | exp . AND exp
   21            | exp . OR exp

    $default  reduce using rule 10 (exp)


State 66

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   14 comparestmt: exp . EQ exp
   15            | exp . NEQ exp
   16            | exp . GT exp
   17            | exp . LT exp
   18            | exp . GE exp
   19            | exp . LE exp
   20            | exp . AND exp
   21            | exp . OR exp
   58 args: exp . COMMA args
   59     | exp .

    AND     shift, and go to state 29
    OR      shift, and go to state 30
    EQ      shift, and go to state 31
    NEQ     shift, and go to state 32
    LT      shift, and go to state 33
    LE      shift, and go to state 34
    GT      shift, and go to state 35
    GE      shift, and go to state 36
    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    COMMA   shift, and go to state 81

    $default  reduce using rule 59 (args)


State 67

   57 funccall: id LPAREN args . RPAREN

    RPAREN  shift, and go to state 82


State 68

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   14 comparestmt: exp . EQ exp
   15            | exp . NEQ exp
   16            | exp . GT exp
   17            | exp . LT exp
   18            | exp . GE exp
   19            | exp . LE exp
   20            | exp . AND exp
   21            | exp . OR exp
   22 arraydefine: id LBRACK exp . RBRACK OF exp

    AND     shift, and go to state 29
    OR      shift, and go to state 30
    EQ      shift, and go to state 31
    NEQ     shift, and go to state 32
    LT      shift, and go to state 33
    LE      shift, and go to state 34
    GT      shift, and go to state 35
    GE      shift, and go to state 36
    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    RBRACK  shift, and go to state 83


State 69

   43 recordfields: id . EQ exp
   44             | id . EQ exp COMMA recordfields

    EQ  shift, and go to state 84


State 70

   42 record: id LBRACE recordfields . RBRACE

    RBRACE  shift, and go to state 85


State 71

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   14 comparestmt: exp . EQ exp
   15            | exp . NEQ exp
   16            | exp . GT exp
   17            | exp . LT exp
   18            | exp . GE exp
   19            | exp . LE exp
   20            | exp . AND exp
   21            | exp . OR exp
   56 assignstmt: lvalue ASSIGN exp .

    AND     shift, and go to state 29
    OR      shift, and go to state 30
    EQ      shift, and go to state 31
    NEQ     shift, and go to state 32
    LT      shift, and go to state 33
    LE      shift, and go to state 34
    GT      shift, and go to state 35
    GE      shift, and go to state 36
    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40

    $default  reduce using rule 56 (assignstmt)


State 72

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   14 comparestmt: exp . EQ exp
   15            | exp . NEQ exp
   16            | exp . GT exp
   17            | exp . LT exp
   18            | exp . GE exp
   19            | exp . LE exp
   20            | exp . AND exp
   21            | exp . OR exp
   26 lvalue: lvalue LBRACK exp . RBRACK

    AND     shift, and go to state 29
    OR      shift, and go to state 30
    EQ      shift, and go to state 31
    NEQ     shift, and go to state 32
    LT      shift, and go to state 33
    LE      shift, and go to state 34
    GT      shift, and go to state 35
    GE      shift, and go to state 36
    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    RBRACK  shift, and go to state 86


State 73

   25 lvalue: lvalue DOT id .

    $default  reduce using rule 25 (lvalue)


State 74

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   14 comparestmt: exp . EQ exp
   15            | exp . NEQ exp
   16            | exp . GT exp
   17            | exp . LT exp
   18            | exp . GE exp
   19            | exp . LE exp
   20            | exp . AND exp
   21            | exp . OR exp
   54 ifstmt: IF exp THEN exp .
   55       | IF exp THEN exp . ELSE exp

    ELSE  shift, and go to state 87

    $default  reduce using rule 54 (ifstmt)


State 75

   40 fundec: FUNCTION id LPAREN . tyfields RPAREN EQ exp
   41       | FUNCTION id LPAREN . tyfields RPAREN COLON id EQ exp

    ID  shift, and go to state 1

    $default  reduce using rule 51 (tyfields)

    id        转到状态 88
    tyfields  转到状态 89


State 76

   45 vardec: VAR ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    IF      shift, and go to state 4
    LET     shift, and go to state 5
    NIL     shift, and go to state 6

    exp          转到状态 90
    comparestmt  转到状态 9
    arraydefine  转到状态 10
    id           转到状态 11
    lvalue       转到状态 12
    stmt         转到状态 13
    letstmt      转到状态 14
    record       转到状态 15
    ifstmt       转到状态 16
    assignstmt   转到状态 17
    funccall     转到状态 18


State 77

   46 vardec: VAR id COLON . id ASSIGN exp

    ID  shift, and go to state 1

    id  转到状态 91


State 78

   47 tydec: TYPE id EQ . ty

    ID      shift, and go to state 1
    LBRACE  shift, and go to state 92
    ARRAY   shift, and go to state 93

    id  转到状态 94
    ty  转到状态 95


State 79

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   14 comparestmt: exp . EQ exp
   15            | exp . NEQ exp
   16            | exp . GT exp
   17            | exp . LT exp
   18            | exp . GE exp
   19            | exp . LE exp
   20            | exp . AND exp
   21            | exp . OR exp
   32 expseq: exp .
   33       | exp . SEMICOLON expseq

    AND        shift, and go to state 29
    OR         shift, and go to state 30
    EQ         shift, and go to state 31
    NEQ        shift, and go to state 32
    LT         shift, and go to state 33
    LE         shift, and go to state 34
    GT         shift, and go to state 35
    GE         shift, and go to state 36
    PLUS       shift, and go to state 37
    MINUS      shift, and go to state 38
    TIMES      shift, and go to state 39
    DIVIDE     shift, and go to state 40
    SEMICOLON  shift, and go to state 96

    $default  reduce using rule 32 (expseq)


State 80

   31 letstmt: LET decs IN expseq . END

    END  shift, and go to state 97


State 81

   58 args: exp COMMA . args

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    IF      shift, and go to state 4
    LET     shift, and go to state 5
    NIL     shift, and go to state 6

    exp          转到状态 66
    comparestmt  转到状态 9
    arraydefine  转到状态 10
    id           转到状态 11
    lvalue       转到状态 12
    stmt         转到状态 13
    letstmt      转到状态 14
    record       转到状态 15
    ifstmt       转到状态 16
    assignstmt   转到状态 17
    funccall     转到状态 18
    args         转到状态 98


State 82

   57 funccall: id LPAREN args RPAREN .

    $default  reduce using rule 57 (funccall)


State 83

   22 arraydefine: id LBRACK exp RBRACK . OF exp

    OF  shift, and go to state 99


State 84

   43 recordfields: id EQ . exp
   44             | id EQ . exp COMMA recordfields

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    IF      shift, and go to state 4
    LET     shift, and go to state 5
    NIL     shift, and go to state 6

    exp          转到状态 100
    comparestmt  转到状态 9
    arraydefine  转到状态 10
    id           转到状态 11
    lvalue       转到状态 12
    stmt         转到状态 13
    letstmt      转到状态 14
    record       转到状态 15
    ifstmt       转到状态 16
    assignstmt   转到状态 17
    funccall     转到状态 18


State 85

   42 record: id LBRACE recordfields RBRACE .

    $default  reduce using rule 42 (record)


State 86

   26 lvalue: lvalue LBRACK exp RBRACK .

    $default  reduce using rule 26 (lvalue)


State 87

   55 ifstmt: IF exp THEN exp ELSE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    IF      shift, and go to state 4
    LET     shift, and go to state 5
    NIL     shift, and go to state 6

    exp          转到状态 101
    comparestmt  转到状态 9
    arraydefine  转到状态 10
    id           转到状态 11
    lvalue       转到状态 12
    stmt         转到状态 13
    letstmt      转到状态 14
    record       转到状态 15
    ifstmt       转到状态 16
    assignstmt   转到状态 17
    funccall     转到状态 18


State 88

   52 tyfields: id . COLON id
   53         | id . COLON id COMMA tyfields

    COLON  shift, and go to state 102


State 89

   40 fundec: FUNCTION id LPAREN tyfields . RPAREN EQ exp
   41       | FUNCTION id LPAREN tyfields . RPAREN COLON id EQ exp

    RPAREN  shift, and go to state 103


State 90

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   14 comparestmt: exp . EQ exp
   15            | exp . NEQ exp
   16            | exp . GT exp
   17            | exp . LT exp
   18            | exp . GE exp
   19            | exp . LE exp
   20            | exp . AND exp
   21            | exp . OR exp
   45 vardec: VAR ID ASSIGN exp .

    AND     shift, and go to state 29
    OR      shift, and go to state 30
    EQ      shift, and go to state 31
    NEQ     shift, and go to state 32
    LT      shift, and go to state 33
    LE      shift, and go to state 34
    GT      shift, and go to state 35
    GE      shift, and go to state 36
    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40

    $default  reduce using rule 45 (vardec)


State 91

   46 vardec: VAR id COLON id . ASSIGN exp

    ASSIGN  shift, and go to state 104


State 92

   49 ty: LBRACE . tyfields RBRACE

    ID  shift, and go to state 1

    $default  reduce using rule 51 (tyfields)

    id        转到状态 88
    tyfields  转到状态 105


State 93

   50 ty: ARRAY . OF id

    OF  shift, and go to state 106


State 94

   48 ty: id .

    $default  reduce using rule 48 (ty)


State 95

   47 tydec: TYPE id EQ ty .

    $default  reduce using rule 47 (tydec)


State 96

   33 expseq: exp SEMICOLON . expseq

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    IF      shift, and go to state 4
    LET     shift, and go to state 5
    NIL     shift, and go to state 6

    $default  reduce using rule 34 (expseq)

    exp          转到状态 79
    comparestmt  转到状态 9
    arraydefine  转到状态 10
    id           转到状态 11
    lvalue       转到状态 12
    stmt         转到状态 13
    letstmt      转到状态 14
    expseq       转到状态 107
    record       转到状态 15
    ifstmt       转到状态 16
    assignstmt   转到状态 17
    funccall     转到状态 18


State 97

   31 letstmt: LET decs IN expseq END .

    $default  reduce using rule 31 (letstmt)


State 98

   58 args: exp COMMA args .

    $default  reduce using rule 58 (args)


State 99

   22 arraydefine: id LBRACK exp RBRACK OF . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    IF      shift, and go to state 4
    LET     shift, and go to state 5
    NIL     shift, and go to state 6

    exp          转到状态 108
    comparestmt  转到状态 9
    arraydefine  转到状态 10
    id           转到状态 11
    lvalue       转到状态 12
    stmt         转到状态 13
    letstmt      转到状态 14
    record       转到状态 15
    ifstmt       转到状态 16
    assignstmt   转到状态 17
    funccall     转到状态 18


State 100

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   14 comparestmt: exp . EQ exp
   15            | exp . NEQ exp
   16            | exp . GT exp
   17            | exp . LT exp
   18            | exp . GE exp
   19            | exp . LE exp
   20            | exp . AND exp
   21            | exp . OR exp
   43 recordfields: id EQ exp .
   44             | id EQ exp . COMMA recordfields

    AND     shift, and go to state 29
    OR      shift, and go to state 30
    EQ      shift, and go to state 31
    NEQ     shift, and go to state 32
    LT      shift, and go to state 33
    LE      shift, and go to state 34
    GT      shift, and go to state 35
    GE      shift, and go to state 36
    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    COMMA   shift, and go to state 109

    $default  reduce using rule 43 (recordfields)


State 101

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   14 comparestmt: exp . EQ exp
   15            | exp . NEQ exp
   16            | exp . GT exp
   17            | exp . LT exp
   18            | exp . GE exp
   19            | exp . LE exp
   20            | exp . AND exp
   21            | exp . OR exp
   55 ifstmt: IF exp THEN exp ELSE exp .

    $default  reduce using rule 55 (ifstmt)


State 102

   52 tyfields: id COLON . id
   53         | id COLON . id COMMA tyfields

    ID  shift, and go to state 1

    id  转到状态 110


State 103

   40 fundec: FUNCTION id LPAREN tyfields RPAREN . EQ exp
   41       | FUNCTION id LPAREN tyfields RPAREN . COLON id EQ exp

    EQ     shift, and go to state 111
    COLON  shift, and go to state 112


State 104

   46 vardec: VAR id COLON id ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    IF      shift, and go to state 4
    LET     shift, and go to state 5
    NIL     shift, and go to state 6

    exp          转到状态 113
    comparestmt  转到状态 9
    arraydefine  转到状态 10
    id           转到状态 11
    lvalue       转到状态 12
    stmt         转到状态 13
    letstmt      转到状态 14
    record       转到状态 15
    ifstmt       转到状态 16
    assignstmt   转到状态 17
    funccall     转到状态 18


State 105

   49 ty: LBRACE tyfields . RBRACE

    RBRACE  shift, and go to state 114


State 106

   50 ty: ARRAY OF . id

    ID  shift, and go to state 1

    id  转到状态 115


State 107

   33 expseq: exp SEMICOLON expseq .

    $default  reduce using rule 33 (expseq)


State 108

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   14 comparestmt: exp . EQ exp
   15            | exp . NEQ exp
   16            | exp . GT exp
   17            | exp . LT exp
   18            | exp . GE exp
   19            | exp . LE exp
   20            | exp . AND exp
   21            | exp . OR exp
   22 arraydefine: id LBRACK exp RBRACK OF exp .

    $default  reduce using rule 22 (arraydefine)


State 109

   44 recordfields: id EQ exp COMMA . recordfields

    ID  shift, and go to state 1

    id            转到状态 69
    recordfields  转到状态 116


State 110

   52 tyfields: id COLON id .
   53         | id COLON id . COMMA tyfields

    COMMA  shift, and go to state 117

    $default  reduce using rule 52 (tyfields)


State 111

   40 fundec: FUNCTION id LPAREN tyfields RPAREN EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    IF      shift, and go to state 4
    LET     shift, and go to state 5
    NIL     shift, and go to state 6

    exp          转到状态 118
    comparestmt  转到状态 9
    arraydefine  转到状态 10
    id           转到状态 11
    lvalue       转到状态 12
    stmt         转到状态 13
    letstmt      转到状态 14
    record       转到状态 15
    ifstmt       转到状态 16
    assignstmt   转到状态 17
    funccall     转到状态 18


State 112

   41 fundec: FUNCTION id LPAREN tyfields RPAREN COLON . id EQ exp

    ID  shift, and go to state 1

    id  转到状态 119


State 113

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   14 comparestmt: exp . EQ exp
   15            | exp . NEQ exp
   16            | exp . GT exp
   17            | exp . LT exp
   18            | exp . GE exp
   19            | exp . LE exp
   20            | exp . AND exp
   21            | exp . OR exp
   46 vardec: VAR id COLON id ASSIGN exp .

    AND     shift, and go to state 29
    OR      shift, and go to state 30
    EQ      shift, and go to state 31
    NEQ     shift, and go to state 32
    LT      shift, and go to state 33
    LE      shift, and go to state 34
    GT      shift, and go to state 35
    GE      shift, and go to state 36
    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40

    $default  reduce using rule 46 (vardec)


State 114

   49 ty: LBRACE tyfields RBRACE .

    $default  reduce using rule 49 (ty)


State 115

   50 ty: ARRAY OF id .

    $default  reduce using rule 50 (ty)


State 116

   44 recordfields: id EQ exp COMMA recordfields .

    $default  reduce using rule 44 (recordfields)


State 117

   53 tyfields: id COLON id COMMA . tyfields

    ID  shift, and go to state 1

    $default  reduce using rule 51 (tyfields)

    id        转到状态 88
    tyfields  转到状态 120


State 118

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   14 comparestmt: exp . EQ exp
   15            | exp . NEQ exp
   16            | exp . GT exp
   17            | exp . LT exp
   18            | exp . GE exp
   19            | exp . LE exp
   20            | exp . AND exp
   21            | exp . OR exp
   40 fundec: FUNCTION id LPAREN tyfields RPAREN EQ exp .

    AND     shift, and go to state 29
    OR      shift, and go to state 30
    EQ      shift, and go to state 31
    NEQ     shift, and go to state 32
    LT      shift, and go to state 33
    LE      shift, and go to state 34
    GT      shift, and go to state 35
    GE      shift, and go to state 36
    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40

    $default  reduce using rule 40 (fundec)


State 119

   41 fundec: FUNCTION id LPAREN tyfields RPAREN COLON id . EQ exp

    EQ  shift, and go to state 121


State 120

   53 tyfields: id COLON id COMMA tyfields .

    $default  reduce using rule 53 (tyfields)


State 121

   41 fundec: FUNCTION id LPAREN tyfields RPAREN COLON id EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    IF      shift, and go to state 4
    LET     shift, and go to state 5
    NIL     shift, and go to state 6

    exp          转到状态 122
    comparestmt  转到状态 9
    arraydefine  转到状态 10
    id           转到状态 11
    lvalue       转到状态 12
    stmt         转到状态 13
    letstmt      转到状态 14
    record       转到状态 15
    ifstmt       转到状态 16
    assignstmt   转到状态 17
    funccall     转到状态 18


State 122

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   14 comparestmt: exp . EQ exp
   15            | exp . NEQ exp
   16            | exp . GT exp
   17            | exp . LT exp
   18            | exp . GE exp
   19            | exp . LE exp
   20            | exp . AND exp
   21            | exp . OR exp
   41 fundec: FUNCTION id LPAREN tyfields RPAREN COLON id EQ exp .

    AND     shift, and go to state 29
    OR      shift, and go to state 30
    EQ      shift, and go to state 31
    NEQ     shift, and go to state 32
    LT      shift, and go to state 33
    LE      shift, and go to state 34
    GT      shift, and go to state 35
    GE      shift, and go to state 36
    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40

    $default  reduce using rule 41 (fundec)
