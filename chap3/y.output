状态 16conflicts: 1 shift/reduce


语法

    0 $accept: program $end

    1 program: exp

    2 exp: lvalue
    3    | stmt
    4    | arraydefine
    5    | record
    6    | comparestmt
    7    | exp PLUS exp
    8    | exp MINUS exp
    9    | exp TIMES exp
   10    | exp DIVIDE exp
   11    | MINUS exp
   12    | INT
   13    | STRING
   14    | NIL
   15    | expblock
   16    | BREAK

   17 comparestmt: exp EQ exp
   18            | exp NEQ exp
   19            | exp GT exp
   20            | exp LT exp
   21            | exp GE exp
   22            | exp LE exp
   23            | exp AND exp
   24            | exp OR exp

   25 arraydefine: id LBRACK exp RBRACK OF exp

   26 id: ID

   27 lvalue: id
   28       | lvalue DOT id
   29       | lvalue LBRACK exp RBRACK

   30 stmt: funccall
   31     | assignstmt
   32     | ifstmt
   33     | letstmt
   34     | forstmt
   35     | whilestmt

   36 whilestmt: WHILE exp DO exp

   37 forstmt: FOR id ASSIGN exp TO exp DO exp

   38 expblock: LPAREN expseq RPAREN

   39 letstmt: LET decs IN expseq END

   40 expseq: exp
   41       | exp SEMICOLON expseq
   42       | %empty

   43 decs: dec decs
   44     | %empty

   45 dec: tydec
   46    | vardec
   47    | fundec

   48 fundec: FUNCTION id LPAREN tyfields RPAREN EQ exp
   49       | FUNCTION id LPAREN tyfields RPAREN COLON id EQ exp

   50 record: id LBRACE recordfields RBRACE

   51 recordfields: id EQ exp
   52             | id EQ exp COMMA recordfields

   53 vardec: VAR ID ASSIGN exp
   54       | VAR id COLON id ASSIGN exp

   55 tydec: TYPE id EQ ty

   56 ty: id
   57   | LBRACE tyfields RBRACE
   58   | ARRAY OF id

   59 tyfields: %empty
   60         | id COLON id
   61         | id COLON id COMMA tyfields

   62 ifstmt: IF exp THEN exp
   63       | IF exp THEN exp ELSE exp

   64 assignstmt: lvalue ASSIGN exp

   65 funccall: id LPAREN args RPAREN

   66 args: exp COMMA args
   67     | exp
   68     | %empty


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 26 53
STRING (259) 13
INT (260) 12
ASSIGN (261) 37 53 54 64
AND (262) 23
OR (263) 24
EQ (264) 17 48 49 51 52 55
NEQ (265) 18
LT (266) 20
LE (267) 22
GT (268) 19
GE (269) 21
PLUS (270) 7
MINUS (271) 8 11
TIMES (272) 9
DIVIDE (273) 10
DO (274) 36 37
OF (275) 25 58
UMINUS (276)
LOWER_THAN_ELSE (277)
ELSE (278) 63
COMMA (279) 52 61 66
COLON (280) 49 54 60 61
SEMICOLON (281) 41
LPAREN (282) 38 48 49 65
RPAREN (283) 38 48 49 65
LBRACK (284) 25 29
RBRACK (285) 25 29
LBRACE (286) 50 57
RBRACE (287) 50 57
DOT (288) 28
ARRAY (289) 58
IF (290) 62 63
THEN (291) 62 63
WHILE (292) 36
FOR (293) 37
TO (294) 37
LET (295) 39
IN (296) 39
END (297) 39
BREAK (298) 16
NIL (299) 14
FUNCTION (300) 48 49
VAR (301) 53 54
TYPE (302) 55


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
program (49)
    on left: 1, on right: 0
exp (50)
    on left: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16, on right: 1 7 8
    9 10 11 17 18 19 20 21 22 23 24 25 29 36 37 40 41 48 49 51 52 53
    54 62 63 64 66 67
comparestmt (51)
    on left: 17 18 19 20 21 22 23 24, on right: 6
arraydefine (52)
    on left: 25, on right: 4
id (53)
    on left: 26, on right: 25 27 28 37 48 49 50 51 52 54 55 56 58 60
    61 65
lvalue (54)
    on left: 27 28 29, on right: 2 28 29 64
stmt (55)
    on left: 30 31 32 33 34 35, on right: 3
whilestmt (56)
    on left: 36, on right: 35
forstmt (57)
    on left: 37, on right: 34
expblock (58)
    on left: 38, on right: 15
letstmt (59)
    on left: 39, on right: 33
expseq (60)
    on left: 40 41 42, on right: 38 39 41
decs (61)
    on left: 43 44, on right: 39 43
dec (62)
    on left: 45 46 47, on right: 43
fundec (63)
    on left: 48 49, on right: 47
record (64)
    on left: 50, on right: 5
recordfields (65)
    on left: 51 52, on right: 50 52
vardec (66)
    on left: 53 54, on right: 46
tydec (67)
    on left: 55, on right: 45
ty (68)
    on left: 56 57 58, on right: 55
tyfields (69)
    on left: 59 60 61, on right: 48 49 57 61
ifstmt (70)
    on left: 62 63, on right: 32
assignstmt (71)
    on left: 64, on right: 31
funccall (72)
    on left: 65, on right: 30
args (73)
    on left: 66 67 68, on right: 65 66


State 0

    0 $accept: . program $end

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    program      转到状态 12
    exp          转到状态 13
    comparestmt  转到状态 14
    arraydefine  转到状态 15
    id           转到状态 16
    lvalue       转到状态 17
    stmt         转到状态 18
    whilestmt    转到状态 19
    forstmt      转到状态 20
    expblock     转到状态 21
    letstmt      转到状态 22
    record       转到状态 23
    ifstmt       转到状态 24
    assignstmt   转到状态 25
    funccall     转到状态 26


State 1

   26 id: ID .

    $default  reduce using rule 26 (id)


State 2

   13 exp: STRING .

    $default  reduce using rule 13 (exp)


State 3

   12 exp: INT .

    $default  reduce using rule 12 (exp)


State 4

   11 exp: MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp          转到状态 27
    comparestmt  转到状态 14
    arraydefine  转到状态 15
    id           转到状态 16
    lvalue       转到状态 17
    stmt         转到状态 18
    whilestmt    转到状态 19
    forstmt      转到状态 20
    expblock     转到状态 21
    letstmt      转到状态 22
    record       转到状态 23
    ifstmt       转到状态 24
    assignstmt   转到状态 25
    funccall     转到状态 26


State 5

   38 expblock: LPAREN . expseq RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 42 (expseq)

    exp          转到状态 28
    comparestmt  转到状态 14
    arraydefine  转到状态 15
    id           转到状态 16
    lvalue       转到状态 17
    stmt         转到状态 18
    whilestmt    转到状态 19
    forstmt      转到状态 20
    expblock     转到状态 21
    letstmt      转到状态 22
    expseq       转到状态 29
    record       转到状态 23
    ifstmt       转到状态 24
    assignstmt   转到状态 25
    funccall     转到状态 26


State 6

   62 ifstmt: IF . exp THEN exp
   63       | IF . exp THEN exp ELSE exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp          转到状态 30
    comparestmt  转到状态 14
    arraydefine  转到状态 15
    id           转到状态 16
    lvalue       转到状态 17
    stmt         转到状态 18
    whilestmt    转到状态 19
    forstmt      转到状态 20
    expblock     转到状态 21
    letstmt      转到状态 22
    record       转到状态 23
    ifstmt       转到状态 24
    assignstmt   转到状态 25
    funccall     转到状态 26


State 7

   36 whilestmt: WHILE . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp          转到状态 31
    comparestmt  转到状态 14
    arraydefine  转到状态 15
    id           转到状态 16
    lvalue       转到状态 17
    stmt         转到状态 18
    whilestmt    转到状态 19
    forstmt      转到状态 20
    expblock     转到状态 21
    letstmt      转到状态 22
    record       转到状态 23
    ifstmt       转到状态 24
    assignstmt   转到状态 25
    funccall     转到状态 26


State 8

   37 forstmt: FOR . id ASSIGN exp TO exp DO exp

    ID  shift, and go to state 1

    id  转到状态 32


State 9

   39 letstmt: LET . decs IN expseq END

    FUNCTION  shift, and go to state 33
    VAR       shift, and go to state 34
    TYPE      shift, and go to state 35

    $default  reduce using rule 44 (decs)

    decs    转到状态 36
    dec     转到状态 37
    fundec  转到状态 38
    vardec  转到状态 39
    tydec   转到状态 40


State 10

   16 exp: BREAK .

    $default  reduce using rule 16 (exp)


State 11

   14 exp: NIL .

    $default  reduce using rule 14 (exp)


State 12

    0 $accept: program . $end

    $end  shift, and go to state 41


State 13

    1 program: exp .
    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   17 comparestmt: exp . EQ exp
   18            | exp . NEQ exp
   19            | exp . GT exp
   20            | exp . LT exp
   21            | exp . GE exp
   22            | exp . LE exp
   23            | exp . AND exp
   24            | exp . OR exp

    AND     shift, and go to state 42
    OR      shift, and go to state 43
    EQ      shift, and go to state 44
    NEQ     shift, and go to state 45
    LT      shift, and go to state 46
    LE      shift, and go to state 47
    GT      shift, and go to state 48
    GE      shift, and go to state 49
    PLUS    shift, and go to state 50
    MINUS   shift, and go to state 51
    TIMES   shift, and go to state 52
    DIVIDE  shift, and go to state 53

    $default  reduce using rule 1 (program)


State 14

    6 exp: comparestmt .

    $default  reduce using rule 6 (exp)


State 15

    4 exp: arraydefine .

    $default  reduce using rule 4 (exp)


State 16

   25 arraydefine: id . LBRACK exp RBRACK OF exp
   27 lvalue: id .
   50 record: id . LBRACE recordfields RBRACE
   65 funccall: id . LPAREN args RPAREN

    LPAREN  shift, and go to state 54
    LBRACK  shift, and go to state 55
    LBRACE  shift, and go to state 56

    LBRACK    [reduce using rule 27 (lvalue)]
    $default  reduce using rule 27 (lvalue)


State 17

    2 exp: lvalue .
   28 lvalue: lvalue . DOT id
   29       | lvalue . LBRACK exp RBRACK
   64 assignstmt: lvalue . ASSIGN exp

    ASSIGN  shift, and go to state 57
    LBRACK  shift, and go to state 58
    DOT     shift, and go to state 59

    $default  reduce using rule 2 (exp)


State 18

    3 exp: stmt .

    $default  reduce using rule 3 (exp)


State 19

   35 stmt: whilestmt .

    $default  reduce using rule 35 (stmt)


State 20

   34 stmt: forstmt .

    $default  reduce using rule 34 (stmt)


State 21

   15 exp: expblock .

    $default  reduce using rule 15 (exp)


State 22

   33 stmt: letstmt .

    $default  reduce using rule 33 (stmt)


State 23

    5 exp: record .

    $default  reduce using rule 5 (exp)


State 24

   32 stmt: ifstmt .

    $default  reduce using rule 32 (stmt)


State 25

   31 stmt: assignstmt .

    $default  reduce using rule 31 (stmt)


State 26

   30 stmt: funccall .

    $default  reduce using rule 30 (stmt)


State 27

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | MINUS exp .
   17 comparestmt: exp . EQ exp
   18            | exp . NEQ exp
   19            | exp . GT exp
   20            | exp . LT exp
   21            | exp . GE exp
   22            | exp . LE exp
   23            | exp . AND exp
   24            | exp . OR exp

    $default  reduce using rule 11 (exp)


State 28

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   17 comparestmt: exp . EQ exp
   18            | exp . NEQ exp
   19            | exp . GT exp
   20            | exp . LT exp
   21            | exp . GE exp
   22            | exp . LE exp
   23            | exp . AND exp
   24            | exp . OR exp
   40 expseq: exp .
   41       | exp . SEMICOLON expseq

    AND        shift, and go to state 42
    OR         shift, and go to state 43
    EQ         shift, and go to state 44
    NEQ        shift, and go to state 45
    LT         shift, and go to state 46
    LE         shift, and go to state 47
    GT         shift, and go to state 48
    GE         shift, and go to state 49
    PLUS       shift, and go to state 50
    MINUS      shift, and go to state 51
    TIMES      shift, and go to state 52
    DIVIDE     shift, and go to state 53
    SEMICOLON  shift, and go to state 60

    $default  reduce using rule 40 (expseq)


State 29

   38 expblock: LPAREN expseq . RPAREN

    RPAREN  shift, and go to state 61


State 30

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   17 comparestmt: exp . EQ exp
   18            | exp . NEQ exp
   19            | exp . GT exp
   20            | exp . LT exp
   21            | exp . GE exp
   22            | exp . LE exp
   23            | exp . AND exp
   24            | exp . OR exp
   62 ifstmt: IF exp . THEN exp
   63       | IF exp . THEN exp ELSE exp

    AND     shift, and go to state 42
    OR      shift, and go to state 43
    EQ      shift, and go to state 44
    NEQ     shift, and go to state 45
    LT      shift, and go to state 46
    LE      shift, and go to state 47
    GT      shift, and go to state 48
    GE      shift, and go to state 49
    PLUS    shift, and go to state 50
    MINUS   shift, and go to state 51
    TIMES   shift, and go to state 52
    DIVIDE  shift, and go to state 53
    THEN    shift, and go to state 62


State 31

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   17 comparestmt: exp . EQ exp
   18            | exp . NEQ exp
   19            | exp . GT exp
   20            | exp . LT exp
   21            | exp . GE exp
   22            | exp . LE exp
   23            | exp . AND exp
   24            | exp . OR exp
   36 whilestmt: WHILE exp . DO exp

    AND     shift, and go to state 42
    OR      shift, and go to state 43
    EQ      shift, and go to state 44
    NEQ     shift, and go to state 45
    LT      shift, and go to state 46
    LE      shift, and go to state 47
    GT      shift, and go to state 48
    GE      shift, and go to state 49
    PLUS    shift, and go to state 50
    MINUS   shift, and go to state 51
    TIMES   shift, and go to state 52
    DIVIDE  shift, and go to state 53
    DO      shift, and go to state 63


State 32

   37 forstmt: FOR id . ASSIGN exp TO exp DO exp

    ASSIGN  shift, and go to state 64


State 33

   48 fundec: FUNCTION . id LPAREN tyfields RPAREN EQ exp
   49       | FUNCTION . id LPAREN tyfields RPAREN COLON id EQ exp

    ID  shift, and go to state 1

    id  转到状态 65


State 34

   53 vardec: VAR . ID ASSIGN exp
   54       | VAR . id COLON id ASSIGN exp

    ID  shift, and go to state 66

    id  转到状态 67


State 35

   55 tydec: TYPE . id EQ ty

    ID  shift, and go to state 1

    id  转到状态 68


State 36

   39 letstmt: LET decs . IN expseq END

    IN  shift, and go to state 69


State 37

   43 decs: dec . decs

    FUNCTION  shift, and go to state 33
    VAR       shift, and go to state 34
    TYPE      shift, and go to state 35

    $default  reduce using rule 44 (decs)

    decs    转到状态 70
    dec     转到状态 37
    fundec  转到状态 38
    vardec  转到状态 39
    tydec   转到状态 40


State 38

   47 dec: fundec .

    $default  reduce using rule 47 (dec)


State 39

   46 dec: vardec .

    $default  reduce using rule 46 (dec)


State 40

   45 dec: tydec .

    $default  reduce using rule 45 (dec)


State 41

    0 $accept: program $end .

    $default  接受


State 42

   23 comparestmt: exp AND . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp          转到状态 71
    comparestmt  转到状态 14
    arraydefine  转到状态 15
    id           转到状态 16
    lvalue       转到状态 17
    stmt         转到状态 18
    whilestmt    转到状态 19
    forstmt      转到状态 20
    expblock     转到状态 21
    letstmt      转到状态 22
    record       转到状态 23
    ifstmt       转到状态 24
    assignstmt   转到状态 25
    funccall     转到状态 26


State 43

   24 comparestmt: exp OR . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp          转到状态 72
    comparestmt  转到状态 14
    arraydefine  转到状态 15
    id           转到状态 16
    lvalue       转到状态 17
    stmt         转到状态 18
    whilestmt    转到状态 19
    forstmt      转到状态 20
    expblock     转到状态 21
    letstmt      转到状态 22
    record       转到状态 23
    ifstmt       转到状态 24
    assignstmt   转到状态 25
    funccall     转到状态 26


State 44

   17 comparestmt: exp EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp          转到状态 73
    comparestmt  转到状态 14
    arraydefine  转到状态 15
    id           转到状态 16
    lvalue       转到状态 17
    stmt         转到状态 18
    whilestmt    转到状态 19
    forstmt      转到状态 20
    expblock     转到状态 21
    letstmt      转到状态 22
    record       转到状态 23
    ifstmt       转到状态 24
    assignstmt   转到状态 25
    funccall     转到状态 26


State 45

   18 comparestmt: exp NEQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp          转到状态 74
    comparestmt  转到状态 14
    arraydefine  转到状态 15
    id           转到状态 16
    lvalue       转到状态 17
    stmt         转到状态 18
    whilestmt    转到状态 19
    forstmt      转到状态 20
    expblock     转到状态 21
    letstmt      转到状态 22
    record       转到状态 23
    ifstmt       转到状态 24
    assignstmt   转到状态 25
    funccall     转到状态 26


State 46

   20 comparestmt: exp LT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp          转到状态 75
    comparestmt  转到状态 14
    arraydefine  转到状态 15
    id           转到状态 16
    lvalue       转到状态 17
    stmt         转到状态 18
    whilestmt    转到状态 19
    forstmt      转到状态 20
    expblock     转到状态 21
    letstmt      转到状态 22
    record       转到状态 23
    ifstmt       转到状态 24
    assignstmt   转到状态 25
    funccall     转到状态 26


State 47

   22 comparestmt: exp LE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp          转到状态 76
    comparestmt  转到状态 14
    arraydefine  转到状态 15
    id           转到状态 16
    lvalue       转到状态 17
    stmt         转到状态 18
    whilestmt    转到状态 19
    forstmt      转到状态 20
    expblock     转到状态 21
    letstmt      转到状态 22
    record       转到状态 23
    ifstmt       转到状态 24
    assignstmt   转到状态 25
    funccall     转到状态 26


State 48

   19 comparestmt: exp GT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp          转到状态 77
    comparestmt  转到状态 14
    arraydefine  转到状态 15
    id           转到状态 16
    lvalue       转到状态 17
    stmt         转到状态 18
    whilestmt    转到状态 19
    forstmt      转到状态 20
    expblock     转到状态 21
    letstmt      转到状态 22
    record       转到状态 23
    ifstmt       转到状态 24
    assignstmt   转到状态 25
    funccall     转到状态 26


State 49

   21 comparestmt: exp GE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp          转到状态 78
    comparestmt  转到状态 14
    arraydefine  转到状态 15
    id           转到状态 16
    lvalue       转到状态 17
    stmt         转到状态 18
    whilestmt    转到状态 19
    forstmt      转到状态 20
    expblock     转到状态 21
    letstmt      转到状态 22
    record       转到状态 23
    ifstmt       转到状态 24
    assignstmt   转到状态 25
    funccall     转到状态 26


State 50

    7 exp: exp PLUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp          转到状态 79
    comparestmt  转到状态 14
    arraydefine  转到状态 15
    id           转到状态 16
    lvalue       转到状态 17
    stmt         转到状态 18
    whilestmt    转到状态 19
    forstmt      转到状态 20
    expblock     转到状态 21
    letstmt      转到状态 22
    record       转到状态 23
    ifstmt       转到状态 24
    assignstmt   转到状态 25
    funccall     转到状态 26


State 51

    8 exp: exp MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp          转到状态 80
    comparestmt  转到状态 14
    arraydefine  转到状态 15
    id           转到状态 16
    lvalue       转到状态 17
    stmt         转到状态 18
    whilestmt    转到状态 19
    forstmt      转到状态 20
    expblock     转到状态 21
    letstmt      转到状态 22
    record       转到状态 23
    ifstmt       转到状态 24
    assignstmt   转到状态 25
    funccall     转到状态 26


State 52

    9 exp: exp TIMES . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp          转到状态 81
    comparestmt  转到状态 14
    arraydefine  转到状态 15
    id           转到状态 16
    lvalue       转到状态 17
    stmt         转到状态 18
    whilestmt    转到状态 19
    forstmt      转到状态 20
    expblock     转到状态 21
    letstmt      转到状态 22
    record       转到状态 23
    ifstmt       转到状态 24
    assignstmt   转到状态 25
    funccall     转到状态 26


State 53

   10 exp: exp DIVIDE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp          转到状态 82
    comparestmt  转到状态 14
    arraydefine  转到状态 15
    id           转到状态 16
    lvalue       转到状态 17
    stmt         转到状态 18
    whilestmt    转到状态 19
    forstmt      转到状态 20
    expblock     转到状态 21
    letstmt      转到状态 22
    record       转到状态 23
    ifstmt       转到状态 24
    assignstmt   转到状态 25
    funccall     转到状态 26


State 54

   65 funccall: id LPAREN . args RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 68 (args)

    exp          转到状态 83
    comparestmt  转到状态 14
    arraydefine  转到状态 15
    id           转到状态 16
    lvalue       转到状态 17
    stmt         转到状态 18
    whilestmt    转到状态 19
    forstmt      转到状态 20
    expblock     转到状态 21
    letstmt      转到状态 22
    record       转到状态 23
    ifstmt       转到状态 24
    assignstmt   转到状态 25
    funccall     转到状态 26
    args         转到状态 84


State 55

   25 arraydefine: id LBRACK . exp RBRACK OF exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp          转到状态 85
    comparestmt  转到状态 14
    arraydefine  转到状态 15
    id           转到状态 16
    lvalue       转到状态 17
    stmt         转到状态 18
    whilestmt    转到状态 19
    forstmt      转到状态 20
    expblock     转到状态 21
    letstmt      转到状态 22
    record       转到状态 23
    ifstmt       转到状态 24
    assignstmt   转到状态 25
    funccall     转到状态 26


State 56

   50 record: id LBRACE . recordfields RBRACE

    ID  shift, and go to state 1

    id            转到状态 86
    recordfields  转到状态 87


State 57

   64 assignstmt: lvalue ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp          转到状态 88
    comparestmt  转到状态 14
    arraydefine  转到状态 15
    id           转到状态 16
    lvalue       转到状态 17
    stmt         转到状态 18
    whilestmt    转到状态 19
    forstmt      转到状态 20
    expblock     转到状态 21
    letstmt      转到状态 22
    record       转到状态 23
    ifstmt       转到状态 24
    assignstmt   转到状态 25
    funccall     转到状态 26


State 58

   29 lvalue: lvalue LBRACK . exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp          转到状态 89
    comparestmt  转到状态 14
    arraydefine  转到状态 15
    id           转到状态 16
    lvalue       转到状态 17
    stmt         转到状态 18
    whilestmt    转到状态 19
    forstmt      转到状态 20
    expblock     转到状态 21
    letstmt      转到状态 22
    record       转到状态 23
    ifstmt       转到状态 24
    assignstmt   转到状态 25
    funccall     转到状态 26


State 59

   28 lvalue: lvalue DOT . id

    ID  shift, and go to state 1

    id  转到状态 90


State 60

   41 expseq: exp SEMICOLON . expseq

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 42 (expseq)

    exp          转到状态 28
    comparestmt  转到状态 14
    arraydefine  转到状态 15
    id           转到状态 16
    lvalue       转到状态 17
    stmt         转到状态 18
    whilestmt    转到状态 19
    forstmt      转到状态 20
    expblock     转到状态 21
    letstmt      转到状态 22
    expseq       转到状态 91
    record       转到状态 23
    ifstmt       转到状态 24
    assignstmt   转到状态 25
    funccall     转到状态 26


State 61

   38 expblock: LPAREN expseq RPAREN .

    $default  reduce using rule 38 (expblock)


State 62

   62 ifstmt: IF exp THEN . exp
   63       | IF exp THEN . exp ELSE exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp          转到状态 92
    comparestmt  转到状态 14
    arraydefine  转到状态 15
    id           转到状态 16
    lvalue       转到状态 17
    stmt         转到状态 18
    whilestmt    转到状态 19
    forstmt      转到状态 20
    expblock     转到状态 21
    letstmt      转到状态 22
    record       转到状态 23
    ifstmt       转到状态 24
    assignstmt   转到状态 25
    funccall     转到状态 26


State 63

   36 whilestmt: WHILE exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp          转到状态 93
    comparestmt  转到状态 14
    arraydefine  转到状态 15
    id           转到状态 16
    lvalue       转到状态 17
    stmt         转到状态 18
    whilestmt    转到状态 19
    forstmt      转到状态 20
    expblock     转到状态 21
    letstmt      转到状态 22
    record       转到状态 23
    ifstmt       转到状态 24
    assignstmt   转到状态 25
    funccall     转到状态 26


State 64

   37 forstmt: FOR id ASSIGN . exp TO exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp          转到状态 94
    comparestmt  转到状态 14
    arraydefine  转到状态 15
    id           转到状态 16
    lvalue       转到状态 17
    stmt         转到状态 18
    whilestmt    转到状态 19
    forstmt      转到状态 20
    expblock     转到状态 21
    letstmt      转到状态 22
    record       转到状态 23
    ifstmt       转到状态 24
    assignstmt   转到状态 25
    funccall     转到状态 26


State 65

   48 fundec: FUNCTION id . LPAREN tyfields RPAREN EQ exp
   49       | FUNCTION id . LPAREN tyfields RPAREN COLON id EQ exp

    LPAREN  shift, and go to state 95


State 66

   26 id: ID .
   53 vardec: VAR ID . ASSIGN exp

    ASSIGN  shift, and go to state 96

    $default  reduce using rule 26 (id)


State 67

   54 vardec: VAR id . COLON id ASSIGN exp

    COLON  shift, and go to state 97


State 68

   55 tydec: TYPE id . EQ ty

    EQ  shift, and go to state 98


State 69

   39 letstmt: LET decs IN . expseq END

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 42 (expseq)

    exp          转到状态 28
    comparestmt  转到状态 14
    arraydefine  转到状态 15
    id           转到状态 16
    lvalue       转到状态 17
    stmt         转到状态 18
    whilestmt    转到状态 19
    forstmt      转到状态 20
    expblock     转到状态 21
    letstmt      转到状态 22
    expseq       转到状态 99
    record       转到状态 23
    ifstmt       转到状态 24
    assignstmt   转到状态 25
    funccall     转到状态 26


State 70

   43 decs: dec decs .

    $default  reduce using rule 43 (decs)


State 71

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   17 comparestmt: exp . EQ exp
   18            | exp . NEQ exp
   19            | exp . GT exp
   20            | exp . LT exp
   21            | exp . GE exp
   22            | exp . LE exp
   23            | exp . AND exp
   23            | exp AND exp .
   24            | exp . OR exp

    EQ      shift, and go to state 44
    NEQ     shift, and go to state 45
    LT      shift, and go to state 46
    LE      shift, and go to state 47
    GT      shift, and go to state 48
    GE      shift, and go to state 49
    PLUS    shift, and go to state 50
    MINUS   shift, and go to state 51
    TIMES   shift, and go to state 52
    DIVIDE  shift, and go to state 53

    $default  reduce using rule 23 (comparestmt)


State 72

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   17 comparestmt: exp . EQ exp
   18            | exp . NEQ exp
   19            | exp . GT exp
   20            | exp . LT exp
   21            | exp . GE exp
   22            | exp . LE exp
   23            | exp . AND exp
   24            | exp . OR exp
   24            | exp OR exp .

    EQ      shift, and go to state 44
    NEQ     shift, and go to state 45
    LT      shift, and go to state 46
    LE      shift, and go to state 47
    GT      shift, and go to state 48
    GE      shift, and go to state 49
    PLUS    shift, and go to state 50
    MINUS   shift, and go to state 51
    TIMES   shift, and go to state 52
    DIVIDE  shift, and go to state 53

    $default  reduce using rule 24 (comparestmt)


State 73

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   17 comparestmt: exp . EQ exp
   17            | exp EQ exp .
   18            | exp . NEQ exp
   19            | exp . GT exp
   20            | exp . LT exp
   21            | exp . GE exp
   22            | exp . LE exp
   23            | exp . AND exp
   24            | exp . OR exp

    PLUS    shift, and go to state 50
    MINUS   shift, and go to state 51
    TIMES   shift, and go to state 52
    DIVIDE  shift, and go to state 53

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 17 (comparestmt)


State 74

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   17 comparestmt: exp . EQ exp
   18            | exp . NEQ exp
   18            | exp NEQ exp .
   19            | exp . GT exp
   20            | exp . LT exp
   21            | exp . GE exp
   22            | exp . LE exp
   23            | exp . AND exp
   24            | exp . OR exp

    PLUS    shift, and go to state 50
    MINUS   shift, and go to state 51
    TIMES   shift, and go to state 52
    DIVIDE  shift, and go to state 53

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 18 (comparestmt)


State 75

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   17 comparestmt: exp . EQ exp
   18            | exp . NEQ exp
   19            | exp . GT exp
   20            | exp . LT exp
   20            | exp LT exp .
   21            | exp . GE exp
   22            | exp . LE exp
   23            | exp . AND exp
   24            | exp . OR exp

    PLUS    shift, and go to state 50
    MINUS   shift, and go to state 51
    TIMES   shift, and go to state 52
    DIVIDE  shift, and go to state 53

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 20 (comparestmt)


State 76

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   17 comparestmt: exp . EQ exp
   18            | exp . NEQ exp
   19            | exp . GT exp
   20            | exp . LT exp
   21            | exp . GE exp
   22            | exp . LE exp
   22            | exp LE exp .
   23            | exp . AND exp
   24            | exp . OR exp

    PLUS    shift, and go to state 50
    MINUS   shift, and go to state 51
    TIMES   shift, and go to state 52
    DIVIDE  shift, and go to state 53

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 22 (comparestmt)


State 77

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   17 comparestmt: exp . EQ exp
   18            | exp . NEQ exp
   19            | exp . GT exp
   19            | exp GT exp .
   20            | exp . LT exp
   21            | exp . GE exp
   22            | exp . LE exp
   23            | exp . AND exp
   24            | exp . OR exp

    PLUS    shift, and go to state 50
    MINUS   shift, and go to state 51
    TIMES   shift, and go to state 52
    DIVIDE  shift, and go to state 53

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 19 (comparestmt)


State 78

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   17 comparestmt: exp . EQ exp
   18            | exp . NEQ exp
   19            | exp . GT exp
   20            | exp . LT exp
   21            | exp . GE exp
   21            | exp GE exp .
   22            | exp . LE exp
   23            | exp . AND exp
   24            | exp . OR exp

    PLUS    shift, and go to state 50
    MINUS   shift, and go to state 51
    TIMES   shift, and go to state 52
    DIVIDE  shift, and go to state 53

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 21 (comparestmt)


State 79

    7 exp: exp . PLUS exp
    7    | exp PLUS exp .
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   17 comparestmt: exp . EQ exp
   18            | exp . NEQ exp
   19            | exp . GT exp
   20            | exp . LT exp
   21            | exp . GE exp
   22            | exp . LE exp
   23            | exp . AND exp
   24            | exp . OR exp

    TIMES   shift, and go to state 52
    DIVIDE  shift, and go to state 53

    $default  reduce using rule 7 (exp)


State 80

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    8    | exp MINUS exp .
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   17 comparestmt: exp . EQ exp
   18            | exp . NEQ exp
   19            | exp . GT exp
   20            | exp . LT exp
   21            | exp . GE exp
   22            | exp . LE exp
   23            | exp . AND exp
   24            | exp . OR exp

    TIMES   shift, and go to state 52
    DIVIDE  shift, and go to state 53

    $default  reduce using rule 8 (exp)


State 81

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
    9    | exp TIMES exp .
   10    | exp . DIVIDE exp
   17 comparestmt: exp . EQ exp
   18            | exp . NEQ exp
   19            | exp . GT exp
   20            | exp . LT exp
   21            | exp . GE exp
   22            | exp . LE exp
   23            | exp . AND exp
   24            | exp . OR exp

    $default  reduce using rule 9 (exp)


State 82

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   10    | exp DIVIDE exp .
   17 comparestmt: exp . EQ exp
   18            | exp . NEQ exp
   19            | exp . GT exp
   20            | exp . LT exp
   21            | exp . GE exp
   22            | exp . LE exp
   23            | exp . AND exp
   24            | exp . OR exp

    $default  reduce using rule 10 (exp)


State 83

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   17 comparestmt: exp . EQ exp
   18            | exp . NEQ exp
   19            | exp . GT exp
   20            | exp . LT exp
   21            | exp . GE exp
   22            | exp . LE exp
   23            | exp . AND exp
   24            | exp . OR exp
   66 args: exp . COMMA args
   67     | exp .

    AND     shift, and go to state 42
    OR      shift, and go to state 43
    EQ      shift, and go to state 44
    NEQ     shift, and go to state 45
    LT      shift, and go to state 46
    LE      shift, and go to state 47
    GT      shift, and go to state 48
    GE      shift, and go to state 49
    PLUS    shift, and go to state 50
    MINUS   shift, and go to state 51
    TIMES   shift, and go to state 52
    DIVIDE  shift, and go to state 53
    COMMA   shift, and go to state 100

    $default  reduce using rule 67 (args)


State 84

   65 funccall: id LPAREN args . RPAREN

    RPAREN  shift, and go to state 101


State 85

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   17 comparestmt: exp . EQ exp
   18            | exp . NEQ exp
   19            | exp . GT exp
   20            | exp . LT exp
   21            | exp . GE exp
   22            | exp . LE exp
   23            | exp . AND exp
   24            | exp . OR exp
   25 arraydefine: id LBRACK exp . RBRACK OF exp

    AND     shift, and go to state 42
    OR      shift, and go to state 43
    EQ      shift, and go to state 44
    NEQ     shift, and go to state 45
    LT      shift, and go to state 46
    LE      shift, and go to state 47
    GT      shift, and go to state 48
    GE      shift, and go to state 49
    PLUS    shift, and go to state 50
    MINUS   shift, and go to state 51
    TIMES   shift, and go to state 52
    DIVIDE  shift, and go to state 53
    RBRACK  shift, and go to state 102


State 86

   51 recordfields: id . EQ exp
   52             | id . EQ exp COMMA recordfields

    EQ  shift, and go to state 103


State 87

   50 record: id LBRACE recordfields . RBRACE

    RBRACE  shift, and go to state 104


State 88

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   17 comparestmt: exp . EQ exp
   18            | exp . NEQ exp
   19            | exp . GT exp
   20            | exp . LT exp
   21            | exp . GE exp
   22            | exp . LE exp
   23            | exp . AND exp
   24            | exp . OR exp
   64 assignstmt: lvalue ASSIGN exp .

    AND     shift, and go to state 42
    OR      shift, and go to state 43
    EQ      shift, and go to state 44
    NEQ     shift, and go to state 45
    LT      shift, and go to state 46
    LE      shift, and go to state 47
    GT      shift, and go to state 48
    GE      shift, and go to state 49
    PLUS    shift, and go to state 50
    MINUS   shift, and go to state 51
    TIMES   shift, and go to state 52
    DIVIDE  shift, and go to state 53

    $default  reduce using rule 64 (assignstmt)


State 89

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   17 comparestmt: exp . EQ exp
   18            | exp . NEQ exp
   19            | exp . GT exp
   20            | exp . LT exp
   21            | exp . GE exp
   22            | exp . LE exp
   23            | exp . AND exp
   24            | exp . OR exp
   29 lvalue: lvalue LBRACK exp . RBRACK

    AND     shift, and go to state 42
    OR      shift, and go to state 43
    EQ      shift, and go to state 44
    NEQ     shift, and go to state 45
    LT      shift, and go to state 46
    LE      shift, and go to state 47
    GT      shift, and go to state 48
    GE      shift, and go to state 49
    PLUS    shift, and go to state 50
    MINUS   shift, and go to state 51
    TIMES   shift, and go to state 52
    DIVIDE  shift, and go to state 53
    RBRACK  shift, and go to state 105


State 90

   28 lvalue: lvalue DOT id .

    $default  reduce using rule 28 (lvalue)


State 91

   41 expseq: exp SEMICOLON expseq .

    $default  reduce using rule 41 (expseq)


State 92

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   17 comparestmt: exp . EQ exp
   18            | exp . NEQ exp
   19            | exp . GT exp
   20            | exp . LT exp
   21            | exp . GE exp
   22            | exp . LE exp
   23            | exp . AND exp
   24            | exp . OR exp
   62 ifstmt: IF exp THEN exp .
   63       | IF exp THEN exp . ELSE exp

    ELSE  shift, and go to state 106

    $default  reduce using rule 62 (ifstmt)


State 93

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   17 comparestmt: exp . EQ exp
   18            | exp . NEQ exp
   19            | exp . GT exp
   20            | exp . LT exp
   21            | exp . GE exp
   22            | exp . LE exp
   23            | exp . AND exp
   24            | exp . OR exp
   36 whilestmt: WHILE exp DO exp .

    $default  reduce using rule 36 (whilestmt)


State 94

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   17 comparestmt: exp . EQ exp
   18            | exp . NEQ exp
   19            | exp . GT exp
   20            | exp . LT exp
   21            | exp . GE exp
   22            | exp . LE exp
   23            | exp . AND exp
   24            | exp . OR exp
   37 forstmt: FOR id ASSIGN exp . TO exp DO exp

    AND     shift, and go to state 42
    OR      shift, and go to state 43
    EQ      shift, and go to state 44
    NEQ     shift, and go to state 45
    LT      shift, and go to state 46
    LE      shift, and go to state 47
    GT      shift, and go to state 48
    GE      shift, and go to state 49
    PLUS    shift, and go to state 50
    MINUS   shift, and go to state 51
    TIMES   shift, and go to state 52
    DIVIDE  shift, and go to state 53
    TO      shift, and go to state 107


State 95

   48 fundec: FUNCTION id LPAREN . tyfields RPAREN EQ exp
   49       | FUNCTION id LPAREN . tyfields RPAREN COLON id EQ exp

    ID  shift, and go to state 1

    $default  reduce using rule 59 (tyfields)

    id        转到状态 108
    tyfields  转到状态 109


State 96

   53 vardec: VAR ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp          转到状态 110
    comparestmt  转到状态 14
    arraydefine  转到状态 15
    id           转到状态 16
    lvalue       转到状态 17
    stmt         转到状态 18
    whilestmt    转到状态 19
    forstmt      转到状态 20
    expblock     转到状态 21
    letstmt      转到状态 22
    record       转到状态 23
    ifstmt       转到状态 24
    assignstmt   转到状态 25
    funccall     转到状态 26


State 97

   54 vardec: VAR id COLON . id ASSIGN exp

    ID  shift, and go to state 1

    id  转到状态 111


State 98

   55 tydec: TYPE id EQ . ty

    ID      shift, and go to state 1
    LBRACE  shift, and go to state 112
    ARRAY   shift, and go to state 113

    id  转到状态 114
    ty  转到状态 115


State 99

   39 letstmt: LET decs IN expseq . END

    END  shift, and go to state 116


State 100

   66 args: exp COMMA . args

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 68 (args)

    exp          转到状态 83
    comparestmt  转到状态 14
    arraydefine  转到状态 15
    id           转到状态 16
    lvalue       转到状态 17
    stmt         转到状态 18
    whilestmt    转到状态 19
    forstmt      转到状态 20
    expblock     转到状态 21
    letstmt      转到状态 22
    record       转到状态 23
    ifstmt       转到状态 24
    assignstmt   转到状态 25
    funccall     转到状态 26
    args         转到状态 117


State 101

   65 funccall: id LPAREN args RPAREN .

    $default  reduce using rule 65 (funccall)


State 102

   25 arraydefine: id LBRACK exp RBRACK . OF exp

    OF  shift, and go to state 118


State 103

   51 recordfields: id EQ . exp
   52             | id EQ . exp COMMA recordfields

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp          转到状态 119
    comparestmt  转到状态 14
    arraydefine  转到状态 15
    id           转到状态 16
    lvalue       转到状态 17
    stmt         转到状态 18
    whilestmt    转到状态 19
    forstmt      转到状态 20
    expblock     转到状态 21
    letstmt      转到状态 22
    record       转到状态 23
    ifstmt       转到状态 24
    assignstmt   转到状态 25
    funccall     转到状态 26


State 104

   50 record: id LBRACE recordfields RBRACE .

    $default  reduce using rule 50 (record)


State 105

   29 lvalue: lvalue LBRACK exp RBRACK .

    $default  reduce using rule 29 (lvalue)


State 106

   63 ifstmt: IF exp THEN exp ELSE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp          转到状态 120
    comparestmt  转到状态 14
    arraydefine  转到状态 15
    id           转到状态 16
    lvalue       转到状态 17
    stmt         转到状态 18
    whilestmt    转到状态 19
    forstmt      转到状态 20
    expblock     转到状态 21
    letstmt      转到状态 22
    record       转到状态 23
    ifstmt       转到状态 24
    assignstmt   转到状态 25
    funccall     转到状态 26


State 107

   37 forstmt: FOR id ASSIGN exp TO . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp          转到状态 121
    comparestmt  转到状态 14
    arraydefine  转到状态 15
    id           转到状态 16
    lvalue       转到状态 17
    stmt         转到状态 18
    whilestmt    转到状态 19
    forstmt      转到状态 20
    expblock     转到状态 21
    letstmt      转到状态 22
    record       转到状态 23
    ifstmt       转到状态 24
    assignstmt   转到状态 25
    funccall     转到状态 26


State 108

   60 tyfields: id . COLON id
   61         | id . COLON id COMMA tyfields

    COLON  shift, and go to state 122


State 109

   48 fundec: FUNCTION id LPAREN tyfields . RPAREN EQ exp
   49       | FUNCTION id LPAREN tyfields . RPAREN COLON id EQ exp

    RPAREN  shift, and go to state 123


State 110

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   17 comparestmt: exp . EQ exp
   18            | exp . NEQ exp
   19            | exp . GT exp
   20            | exp . LT exp
   21            | exp . GE exp
   22            | exp . LE exp
   23            | exp . AND exp
   24            | exp . OR exp
   53 vardec: VAR ID ASSIGN exp .

    AND     shift, and go to state 42
    OR      shift, and go to state 43
    EQ      shift, and go to state 44
    NEQ     shift, and go to state 45
    LT      shift, and go to state 46
    LE      shift, and go to state 47
    GT      shift, and go to state 48
    GE      shift, and go to state 49
    PLUS    shift, and go to state 50
    MINUS   shift, and go to state 51
    TIMES   shift, and go to state 52
    DIVIDE  shift, and go to state 53

    $default  reduce using rule 53 (vardec)


State 111

   54 vardec: VAR id COLON id . ASSIGN exp

    ASSIGN  shift, and go to state 124


State 112

   57 ty: LBRACE . tyfields RBRACE

    ID  shift, and go to state 1

    $default  reduce using rule 59 (tyfields)

    id        转到状态 108
    tyfields  转到状态 125


State 113

   58 ty: ARRAY . OF id

    OF  shift, and go to state 126


State 114

   56 ty: id .

    $default  reduce using rule 56 (ty)


State 115

   55 tydec: TYPE id EQ ty .

    $default  reduce using rule 55 (tydec)


State 116

   39 letstmt: LET decs IN expseq END .

    $default  reduce using rule 39 (letstmt)


State 117

   66 args: exp COMMA args .

    $default  reduce using rule 66 (args)


State 118

   25 arraydefine: id LBRACK exp RBRACK OF . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp          转到状态 127
    comparestmt  转到状态 14
    arraydefine  转到状态 15
    id           转到状态 16
    lvalue       转到状态 17
    stmt         转到状态 18
    whilestmt    转到状态 19
    forstmt      转到状态 20
    expblock     转到状态 21
    letstmt      转到状态 22
    record       转到状态 23
    ifstmt       转到状态 24
    assignstmt   转到状态 25
    funccall     转到状态 26


State 119

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   17 comparestmt: exp . EQ exp
   18            | exp . NEQ exp
   19            | exp . GT exp
   20            | exp . LT exp
   21            | exp . GE exp
   22            | exp . LE exp
   23            | exp . AND exp
   24            | exp . OR exp
   51 recordfields: id EQ exp .
   52             | id EQ exp . COMMA recordfields

    AND     shift, and go to state 42
    OR      shift, and go to state 43
    EQ      shift, and go to state 44
    NEQ     shift, and go to state 45
    LT      shift, and go to state 46
    LE      shift, and go to state 47
    GT      shift, and go to state 48
    GE      shift, and go to state 49
    PLUS    shift, and go to state 50
    MINUS   shift, and go to state 51
    TIMES   shift, and go to state 52
    DIVIDE  shift, and go to state 53
    COMMA   shift, and go to state 128

    $default  reduce using rule 51 (recordfields)


State 120

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   17 comparestmt: exp . EQ exp
   18            | exp . NEQ exp
   19            | exp . GT exp
   20            | exp . LT exp
   21            | exp . GE exp
   22            | exp . LE exp
   23            | exp . AND exp
   24            | exp . OR exp
   63 ifstmt: IF exp THEN exp ELSE exp .

    $default  reduce using rule 63 (ifstmt)


State 121

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   17 comparestmt: exp . EQ exp
   18            | exp . NEQ exp
   19            | exp . GT exp
   20            | exp . LT exp
   21            | exp . GE exp
   22            | exp . LE exp
   23            | exp . AND exp
   24            | exp . OR exp
   37 forstmt: FOR id ASSIGN exp TO exp . DO exp

    AND     shift, and go to state 42
    OR      shift, and go to state 43
    EQ      shift, and go to state 44
    NEQ     shift, and go to state 45
    LT      shift, and go to state 46
    LE      shift, and go to state 47
    GT      shift, and go to state 48
    GE      shift, and go to state 49
    PLUS    shift, and go to state 50
    MINUS   shift, and go to state 51
    TIMES   shift, and go to state 52
    DIVIDE  shift, and go to state 53
    DO      shift, and go to state 129


State 122

   60 tyfields: id COLON . id
   61         | id COLON . id COMMA tyfields

    ID  shift, and go to state 1

    id  转到状态 130


State 123

   48 fundec: FUNCTION id LPAREN tyfields RPAREN . EQ exp
   49       | FUNCTION id LPAREN tyfields RPAREN . COLON id EQ exp

    EQ     shift, and go to state 131
    COLON  shift, and go to state 132


State 124

   54 vardec: VAR id COLON id ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp          转到状态 133
    comparestmt  转到状态 14
    arraydefine  转到状态 15
    id           转到状态 16
    lvalue       转到状态 17
    stmt         转到状态 18
    whilestmt    转到状态 19
    forstmt      转到状态 20
    expblock     转到状态 21
    letstmt      转到状态 22
    record       转到状态 23
    ifstmt       转到状态 24
    assignstmt   转到状态 25
    funccall     转到状态 26


State 125

   57 ty: LBRACE tyfields . RBRACE

    RBRACE  shift, and go to state 134


State 126

   58 ty: ARRAY OF . id

    ID  shift, and go to state 1

    id  转到状态 135


State 127

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   17 comparestmt: exp . EQ exp
   18            | exp . NEQ exp
   19            | exp . GT exp
   20            | exp . LT exp
   21            | exp . GE exp
   22            | exp . LE exp
   23            | exp . AND exp
   24            | exp . OR exp
   25 arraydefine: id LBRACK exp RBRACK OF exp .

    $default  reduce using rule 25 (arraydefine)


State 128

   52 recordfields: id EQ exp COMMA . recordfields

    ID  shift, and go to state 1

    id            转到状态 86
    recordfields  转到状态 136


State 129

   37 forstmt: FOR id ASSIGN exp TO exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp          转到状态 137
    comparestmt  转到状态 14
    arraydefine  转到状态 15
    id           转到状态 16
    lvalue       转到状态 17
    stmt         转到状态 18
    whilestmt    转到状态 19
    forstmt      转到状态 20
    expblock     转到状态 21
    letstmt      转到状态 22
    record       转到状态 23
    ifstmt       转到状态 24
    assignstmt   转到状态 25
    funccall     转到状态 26


State 130

   60 tyfields: id COLON id .
   61         | id COLON id . COMMA tyfields

    COMMA  shift, and go to state 138

    $default  reduce using rule 60 (tyfields)


State 131

   48 fundec: FUNCTION id LPAREN tyfields RPAREN EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp          转到状态 139
    comparestmt  转到状态 14
    arraydefine  转到状态 15
    id           转到状态 16
    lvalue       转到状态 17
    stmt         转到状态 18
    whilestmt    转到状态 19
    forstmt      转到状态 20
    expblock     转到状态 21
    letstmt      转到状态 22
    record       转到状态 23
    ifstmt       转到状态 24
    assignstmt   转到状态 25
    funccall     转到状态 26


State 132

   49 fundec: FUNCTION id LPAREN tyfields RPAREN COLON . id EQ exp

    ID  shift, and go to state 1

    id  转到状态 140


State 133

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   17 comparestmt: exp . EQ exp
   18            | exp . NEQ exp
   19            | exp . GT exp
   20            | exp . LT exp
   21            | exp . GE exp
   22            | exp . LE exp
   23            | exp . AND exp
   24            | exp . OR exp
   54 vardec: VAR id COLON id ASSIGN exp .

    AND     shift, and go to state 42
    OR      shift, and go to state 43
    EQ      shift, and go to state 44
    NEQ     shift, and go to state 45
    LT      shift, and go to state 46
    LE      shift, and go to state 47
    GT      shift, and go to state 48
    GE      shift, and go to state 49
    PLUS    shift, and go to state 50
    MINUS   shift, and go to state 51
    TIMES   shift, and go to state 52
    DIVIDE  shift, and go to state 53

    $default  reduce using rule 54 (vardec)


State 134

   57 ty: LBRACE tyfields RBRACE .

    $default  reduce using rule 57 (ty)


State 135

   58 ty: ARRAY OF id .

    $default  reduce using rule 58 (ty)


State 136

   52 recordfields: id EQ exp COMMA recordfields .

    $default  reduce using rule 52 (recordfields)


State 137

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   17 comparestmt: exp . EQ exp
   18            | exp . NEQ exp
   19            | exp . GT exp
   20            | exp . LT exp
   21            | exp . GE exp
   22            | exp . LE exp
   23            | exp . AND exp
   24            | exp . OR exp
   37 forstmt: FOR id ASSIGN exp TO exp DO exp .

    $default  reduce using rule 37 (forstmt)


State 138

   61 tyfields: id COLON id COMMA . tyfields

    ID  shift, and go to state 1

    $default  reduce using rule 59 (tyfields)

    id        转到状态 108
    tyfields  转到状态 141


State 139

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   17 comparestmt: exp . EQ exp
   18            | exp . NEQ exp
   19            | exp . GT exp
   20            | exp . LT exp
   21            | exp . GE exp
   22            | exp . LE exp
   23            | exp . AND exp
   24            | exp . OR exp
   48 fundec: FUNCTION id LPAREN tyfields RPAREN EQ exp .

    AND     shift, and go to state 42
    OR      shift, and go to state 43
    EQ      shift, and go to state 44
    NEQ     shift, and go to state 45
    LT      shift, and go to state 46
    LE      shift, and go to state 47
    GT      shift, and go to state 48
    GE      shift, and go to state 49
    PLUS    shift, and go to state 50
    MINUS   shift, and go to state 51
    TIMES   shift, and go to state 52
    DIVIDE  shift, and go to state 53

    $default  reduce using rule 48 (fundec)


State 140

   49 fundec: FUNCTION id LPAREN tyfields RPAREN COLON id . EQ exp

    EQ  shift, and go to state 142


State 141

   61 tyfields: id COLON id COMMA tyfields .

    $default  reduce using rule 61 (tyfields)


State 142

   49 fundec: FUNCTION id LPAREN tyfields RPAREN COLON id EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp          转到状态 143
    comparestmt  转到状态 14
    arraydefine  转到状态 15
    id           转到状态 16
    lvalue       转到状态 17
    stmt         转到状态 18
    whilestmt    转到状态 19
    forstmt      转到状态 20
    expblock     转到状态 21
    letstmt      转到状态 22
    record       转到状态 23
    ifstmt       转到状态 24
    assignstmt   转到状态 25
    funccall     转到状态 26


State 143

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   17 comparestmt: exp . EQ exp
   18            | exp . NEQ exp
   19            | exp . GT exp
   20            | exp . LT exp
   21            | exp . GE exp
   22            | exp . LE exp
   23            | exp . AND exp
   24            | exp . OR exp
   49 fundec: FUNCTION id LPAREN tyfields RPAREN COLON id EQ exp .

    AND     shift, and go to state 42
    OR      shift, and go to state 43
    EQ      shift, and go to state 44
    NEQ     shift, and go to state 45
    LT      shift, and go to state 46
    LE      shift, and go to state 47
    GT      shift, and go to state 48
    GE      shift, and go to state 49
    PLUS    shift, and go to state 50
    MINUS   shift, and go to state 51
    TIMES   shift, and go to state 52
    DIVIDE  shift, and go to state 53

    $default  reduce using rule 49 (fundec)
